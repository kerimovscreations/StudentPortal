{"version":3,"sources":["moment.js","mdPickers.min.js","app.js","factories.js","services.js","filters.js","directives.js","controllers.js","routes.js"],"names":[],"mappingsvmHA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtr9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["//! moment.js\n//! version : 2.12.0\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, function () { 'use strict';\n\n    var hookCallback;\n\n    function utils_hooks__hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function create_utc__createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    function valid__isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            m._isValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function valid__createInvalid (flags) {\n        var m = create_utc__createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = utils_hooks__hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            utils_hooks__hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (utils_hooks__hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (firstTime) {\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(arguments).join(', ') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    utils_hooks__hooks.suppressDeprecationWarnings = false;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function isObject(input) {\n        return Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function locale_set__set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _ordinalParseLenient.\n        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    // internal storage for locale config files\n    var locales = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we\n                // want to undo that for lazy loaded locales\n                locale_locales__getSetGlobalLocale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function locale_locales__getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = locale_locales__getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale');\n                config = mergeConfigs(locales[name]._config, config);\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    config = mergeConfigs(locales[config.parentLocale]._config, config);\n                } else {\n                    // treat as if there is no base config\n                    deprecateSimple('parentLocaleUndefined',\n                            'specified parentLocale is not defined yet');\n                }\n            }\n            locales[name] = new Locale(config);\n\n            // backwards compat for now: also set the locale\n            locale_locales__getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale;\n            if (locales[name] != null) {\n                config = mergeConfigs(locales[name]._config, config);\n            }\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            locale_locales__getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function locale_locales__getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function locale_locales__listLocales() {\n        return Object.keys(locales);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                get_set__set(this, unit, value);\n                utils_hooks__hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get_set__get(this, unit);\n            }\n        };\n    }\n\n    function get_set__get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function get_set__set (mom, unit, value) {\n        if (mom.isValid()) {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n\n    // MOMENTS\n\n    function getSet (units, value) {\n        var unit;\n        if (typeof units === 'object') {\n            for (unit in units) {\n                this.set(unit, units[unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (typeof callback === 'number') {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = create_utc__createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (typeof value !== 'number') {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            utils_hooks__hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get_set__get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = create_utc__createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')$', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')$', 'i');\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    utils_hooks__hooks.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    function createDate (y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        //the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    utils_hooks__hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', false);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(utils_hooks__hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n            week = defaults(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    utils_hooks__hooks.ISO_8601 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === utils_hooks__hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (getParsingFlags(config).bigHour === true &&\n                config._a[HOUR] <= 12 &&\n                config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!valid__isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || locale_locales__getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return valid__createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else if (isDate(input)) {\n            config._d = input;\n        } else {\n            configFromInput(config);\n        }\n\n        if (!valid__isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (input === undefined) {\n            config._d = new Date(utils_hooks__hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (typeof(input) === 'object') {\n            configFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function local__createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n         'moment().min is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n         function () {\n             var other = local__createLocal.apply(null, arguments);\n             if (this.isValid() && other.isValid()) {\n                 return other < this ? this : other;\n             } else {\n                 return valid__createInvalid();\n             }\n         }\n     );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n        function () {\n            var other = local__createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return valid__createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return local__createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = locale_locales__getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = ((string || '').match(matcher) || []);\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            utils_hooks__hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return local__createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    utils_hooks__hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n            } else if (Math.abs(input) < 16) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    utils_hooks__hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm) {\n            this.utcOffset(this._tzm);\n        } else if (typeof this._i === 'string') {\n            this.utcOffset(offsetFromString(matchOffset, this._i));\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? local__createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?\\d*)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$/;\n\n    function create__createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])        * sign,\n                h  : toInt(match[HOUR])        * sign,\n                m  : toInt(match[MINUTE])      * sign,\n                s  : toInt(match[SECOND])      * sign,\n                ms : toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    create__createDuration.fn = Duration.prototype;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = create__createDuration(val, period);\n            add_subtract__addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            utils_hooks__hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add_subtract__add      = createAdder(1, 'add');\n    var add_subtract__subtract = createAdder(-1, 'subtract');\n\n    function moment_calendar__calendar (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || local__createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            diff = this.diff(sod, 'days', true),\n            format = diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format]() : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : local__createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return +this > +localInput;\n        } else {\n            return +localInput < +this.clone().startOf(units);\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : local__createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return +this < +localInput;\n        } else {\n            return +this.clone().endOf(units) < +localInput;\n        }\n    }\n\n    function isBetween (from, to, units) {\n        return this.isAfter(from, units) && this.isBefore(to, units);\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : local__createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return +this === +localInput;\n        } else {\n            inputMs = +localInput;\n            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            delta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        if (units === 'year' || units === 'month' || units === 'quarter') {\n            output = monthDiff(this, that);\n            if (units === 'quarter') {\n                output = output / 3;\n            } else if (units === 'year') {\n                output = output / 12;\n            }\n        } else {\n            delta = this - that;\n            output = units === 'second' ? delta / 1e3 : // 1000\n                units === 'minute' ? delta / 6e4 : // 1000 * 60\n                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                delta;\n        }\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        return -(wholeMonthDiff + adjust);\n    }\n\n    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function moment_format__toISOString () {\n        var m = this.clone().utc();\n        if (0 < m.year() && m.year() <= 9999) {\n            if (isFunction(Date.prototype.toISOString)) {\n                // native implementation is ~50x faster, use it when we can\n                return this.toDate().toISOString();\n            } else {\n                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        } else {\n            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        }\n    }\n\n    function format (inputString) {\n        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 local__createLocal(time).isValid())) {\n            return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(local__createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 local__createLocal(time).isValid())) {\n            return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(local__createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = locale_locales__getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function to_type__valueOf () {\n        return +this._d - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(+this / 1000);\n    }\n\n    function toDate () {\n        return this._offset ? new Date(+this) : this._d;\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function moment_valid__isValid () {\n        return valid__isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0], 10);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   matchWord);\n    addRegexToken('ddd',  matchWord);\n    addRegexToken('dddd', matchWord);\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return this._weekdaysShort[m.day()];\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return this._weekdaysMin[m.day()];\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = local__createLocal([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n    }\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var momentPrototype__proto = Moment.prototype;\n\n    momentPrototype__proto.add               = add_subtract__add;\n    momentPrototype__proto.calendar          = moment_calendar__calendar;\n    momentPrototype__proto.clone             = clone;\n    momentPrototype__proto.diff              = diff;\n    momentPrototype__proto.endOf             = endOf;\n    momentPrototype__proto.format            = format;\n    momentPrototype__proto.from              = from;\n    momentPrototype__proto.fromNow           = fromNow;\n    momentPrototype__proto.to                = to;\n    momentPrototype__proto.toNow             = toNow;\n    momentPrototype__proto.get               = getSet;\n    momentPrototype__proto.invalidAt         = invalidAt;\n    momentPrototype__proto.isAfter           = isAfter;\n    momentPrototype__proto.isBefore          = isBefore;\n    momentPrototype__proto.isBetween         = isBetween;\n    momentPrototype__proto.isSame            = isSame;\n    momentPrototype__proto.isSameOrAfter     = isSameOrAfter;\n    momentPrototype__proto.isSameOrBefore    = isSameOrBefore;\n    momentPrototype__proto.isValid           = moment_valid__isValid;\n    momentPrototype__proto.lang              = lang;\n    momentPrototype__proto.locale            = locale;\n    momentPrototype__proto.localeData        = localeData;\n    momentPrototype__proto.max               = prototypeMax;\n    momentPrototype__proto.min               = prototypeMin;\n    momentPrototype__proto.parsingFlags      = parsingFlags;\n    momentPrototype__proto.set               = getSet;\n    momentPrototype__proto.startOf           = startOf;\n    momentPrototype__proto.subtract          = add_subtract__subtract;\n    momentPrototype__proto.toArray           = toArray;\n    momentPrototype__proto.toObject          = toObject;\n    momentPrototype__proto.toDate            = toDate;\n    momentPrototype__proto.toISOString       = moment_format__toISOString;\n    momentPrototype__proto.toJSON            = toJSON;\n    momentPrototype__proto.toString          = toString;\n    momentPrototype__proto.unix              = unix;\n    momentPrototype__proto.valueOf           = to_type__valueOf;\n    momentPrototype__proto.creationData      = creationData;\n\n    // Year\n    momentPrototype__proto.year       = getSetYear;\n    momentPrototype__proto.isLeapYear = getIsLeapYear;\n\n    // Week Year\n    momentPrototype__proto.weekYear    = getSetWeekYear;\n    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;\n\n    // Quarter\n    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;\n\n    // Month\n    momentPrototype__proto.month       = getSetMonth;\n    momentPrototype__proto.daysInMonth = getDaysInMonth;\n\n    // Week\n    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;\n    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;\n    momentPrototype__proto.weeksInYear    = getWeeksInYear;\n    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;\n\n    // Day\n    momentPrototype__proto.date       = getSetDayOfMonth;\n    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;\n    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;\n    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;\n    momentPrototype__proto.dayOfYear  = getSetDayOfYear;\n\n    // Hour\n    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;\n\n    // Minute\n    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;\n\n    // Second\n    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;\n\n    // Millisecond\n    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;\n\n    // Offset\n    momentPrototype__proto.utcOffset            = getSetOffset;\n    momentPrototype__proto.utc                  = setOffsetToUTC;\n    momentPrototype__proto.local                = setOffsetToLocal;\n    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;\n    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    momentPrototype__proto.isDST                = isDaylightSavingTime;\n    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;\n    momentPrototype__proto.isLocal              = isLocal;\n    momentPrototype__proto.isUtcOffset          = isUtcOffset;\n    momentPrototype__proto.isUtc                = isUtc;\n    momentPrototype__proto.isUTC                = isUtc;\n\n    // Timezone\n    momentPrototype__proto.zoneAbbr = getZoneAbbr;\n    momentPrototype__proto.zoneName = getZoneName;\n\n    // Deprecations\n    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);\n\n    var momentPrototype = momentPrototype__proto;\n\n    function moment__createUnix (input) {\n        return local__createLocal(input * 1000);\n    }\n\n    function moment__createInZone () {\n        return local__createLocal.apply(null, arguments).parseZone();\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function locale_calendar__calendar (key, mom, now) {\n        var output = this._calendar[key];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relative__relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var prototype__proto = Locale.prototype;\n\n    prototype__proto._calendar       = defaultCalendar;\n    prototype__proto.calendar        = locale_calendar__calendar;\n    prototype__proto._longDateFormat = defaultLongDateFormat;\n    prototype__proto.longDateFormat  = longDateFormat;\n    prototype__proto._invalidDate    = defaultInvalidDate;\n    prototype__proto.invalidDate     = invalidDate;\n    prototype__proto._ordinal        = defaultOrdinal;\n    prototype__proto.ordinal         = ordinal;\n    prototype__proto._ordinalParse   = defaultOrdinalParse;\n    prototype__proto.preparse        = preParsePostFormat;\n    prototype__proto.postformat      = preParsePostFormat;\n    prototype__proto._relativeTime   = defaultRelativeTime;\n    prototype__proto.relativeTime    = relative__relativeTime;\n    prototype__proto.pastFuture      = pastFuture;\n    prototype__proto.set             = locale_set__set;\n\n    // Month\n    prototype__proto.months            =        localeMonths;\n    prototype__proto._months           = defaultLocaleMonths;\n    prototype__proto.monthsShort       =        localeMonthsShort;\n    prototype__proto._monthsShort      = defaultLocaleMonthsShort;\n    prototype__proto.monthsParse       =        localeMonthsParse;\n    prototype__proto._monthsRegex      = defaultMonthsRegex;\n    prototype__proto.monthsRegex       = monthsRegex;\n    prototype__proto._monthsShortRegex = defaultMonthsShortRegex;\n    prototype__proto.monthsShortRegex  = monthsShortRegex;\n\n    // Week\n    prototype__proto.week = localeWeek;\n    prototype__proto._week = defaultLocaleWeek;\n    prototype__proto.firstDayOfYear = localeFirstDayOfYear;\n    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;\n\n    // Day of Week\n    prototype__proto.weekdays       =        localeWeekdays;\n    prototype__proto._weekdays      = defaultLocaleWeekdays;\n    prototype__proto.weekdaysMin    =        localeWeekdaysMin;\n    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;\n    prototype__proto.weekdaysShort  =        localeWeekdaysShort;\n    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;\n    prototype__proto.weekdaysParse  =        localeWeekdaysParse;\n\n    // Hours\n    prototype__proto.isPM = localeIsPM;\n    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;\n    prototype__proto.meridiem = localeMeridiem;\n\n    function lists__get (format, index, field, setter) {\n        var locale = locale_locales__getLocale();\n        var utc = create_utc__createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function list (format, index, field, count, setter) {\n        if (typeof format === 'number') {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return lists__get(format, index, field, setter);\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < count; i++) {\n            out[i] = lists__get(format, i, field, setter);\n        }\n        return out;\n    }\n\n    function lists__listMonths (format, index) {\n        return list(format, index, 'months', 12, 'month');\n    }\n\n    function lists__listMonthsShort (format, index) {\n        return list(format, index, 'monthsShort', 12, 'month');\n    }\n\n    function lists__listWeekdays (format, index) {\n        return list(format, index, 'weekdays', 7, 'day');\n    }\n\n    function lists__listWeekdaysShort (format, index) {\n        return list(format, index, 'weekdaysShort', 7, 'day');\n    }\n\n    function lists__listWeekdaysMin (format, index) {\n        return list(format, index, 'weekdaysMin', 7, 'day');\n    }\n\n    locale_locales__getSetGlobalLocale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);\n    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);\n\n    var mathAbs = Math.abs;\n\n    function duration_abs__abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function duration_add_subtract__addSubtract (duration, input, value, direction) {\n        var other = create__createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function duration_add_subtract__add (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function duration_add_subtract__subtract (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function duration_as__valueOf () {\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function duration_get__get (units) {\n        units = normalizeUnits(units);\n        return this[units + 's']();\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this._data[name];\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        s: 45,  // seconds to minute\n        m: 45,  // minutes to hour\n        h: 22,  // hours to day\n        d: 26,  // days to month\n        M: 11   // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {\n        var duration = create__createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds < thresholds.s && ['s', seconds]  ||\n                minutes <= 1           && ['m']           ||\n                minutes < thresholds.m && ['mm', minutes] ||\n                hours   <= 1           && ['h']           ||\n                hours   < thresholds.h && ['hh', hours]   ||\n                days    <= 1           && ['d']           ||\n                days    < thresholds.d && ['dd', days]    ||\n                months  <= 1           && ['M']           ||\n                months  < thresholds.M && ['MM', months]  ||\n                years   <= 1           && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        var locale = this.localeData();\n        var output = duration_humanize__relativeTime(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var iso_string__abs = Math.abs;\n\n    function iso_string__toISOString() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        var seconds = iso_string__abs(this._milliseconds) / 1000;\n        var days         = iso_string__abs(this._days);\n        var months       = iso_string__abs(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds;\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        return (total < 0 ? '-' : '') +\n            'P' +\n            (Y ? Y + 'Y' : '') +\n            (M ? M + 'M' : '') +\n            (D ? D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? h + 'H' : '') +\n            (m ? m + 'M' : '') +\n            (s ? s + 'S' : '');\n    }\n\n    var duration_prototype__proto = Duration.prototype;\n\n    duration_prototype__proto.abs            = duration_abs__abs;\n    duration_prototype__proto.add            = duration_add_subtract__add;\n    duration_prototype__proto.subtract       = duration_add_subtract__subtract;\n    duration_prototype__proto.as             = as;\n    duration_prototype__proto.asMilliseconds = asMilliseconds;\n    duration_prototype__proto.asSeconds      = asSeconds;\n    duration_prototype__proto.asMinutes      = asMinutes;\n    duration_prototype__proto.asHours        = asHours;\n    duration_prototype__proto.asDays         = asDays;\n    duration_prototype__proto.asWeeks        = asWeeks;\n    duration_prototype__proto.asMonths       = asMonths;\n    duration_prototype__proto.asYears        = asYears;\n    duration_prototype__proto.valueOf        = duration_as__valueOf;\n    duration_prototype__proto._bubble        = bubble;\n    duration_prototype__proto.get            = duration_get__get;\n    duration_prototype__proto.milliseconds   = milliseconds;\n    duration_prototype__proto.seconds        = seconds;\n    duration_prototype__proto.minutes        = minutes;\n    duration_prototype__proto.hours          = hours;\n    duration_prototype__proto.days           = days;\n    duration_prototype__proto.weeks          = weeks;\n    duration_prototype__proto.months         = months;\n    duration_prototype__proto.years          = years;\n    duration_prototype__proto.humanize       = humanize;\n    duration_prototype__proto.toISOString    = iso_string__toISOString;\n    duration_prototype__proto.toString       = iso_string__toISOString;\n    duration_prototype__proto.toJSON         = iso_string__toISOString;\n    duration_prototype__proto.locale         = locale;\n    duration_prototype__proto.localeData     = localeData;\n\n    // Deprecations\n    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);\n    duration_prototype__proto.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    utils_hooks__hooks.version = '2.12.0';\n\n    setHookCallback(local__createLocal);\n\n    utils_hooks__hooks.fn                    = momentPrototype;\n    utils_hooks__hooks.min                   = min;\n    utils_hooks__hooks.max                   = max;\n    utils_hooks__hooks.now                   = now;\n    utils_hooks__hooks.utc                   = create_utc__createUTC;\n    utils_hooks__hooks.unix                  = moment__createUnix;\n    utils_hooks__hooks.months                = lists__listMonths;\n    utils_hooks__hooks.isDate                = isDate;\n    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;\n    utils_hooks__hooks.invalid               = valid__createInvalid;\n    utils_hooks__hooks.duration              = create__createDuration;\n    utils_hooks__hooks.isMoment              = isMoment;\n    utils_hooks__hooks.weekdays              = lists__listWeekdays;\n    utils_hooks__hooks.parseZone             = moment__createInZone;\n    utils_hooks__hooks.localeData            = locale_locales__getLocale;\n    utils_hooks__hooks.isDuration            = isDuration;\n    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;\n    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;\n    utils_hooks__hooks.defineLocale          = defineLocale;\n    utils_hooks__hooks.updateLocale          = updateLocale;\n    utils_hooks__hooks.locales               = locale_locales__listLocales;\n    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;\n    utils_hooks__hooks.normalizeUnits        = normalizeUnits;\n    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;\n    utils_hooks__hooks.prototype             = momentPrototype;\n\n    var _moment = utils_hooks__hooks;\n\n    return _moment;\n\n}));","!function(){\"use strict\";function t(t,e,a,i,n,r){var o=this;this.date=moment(n),this.minDate=r.minDate&&moment(r.minDate).isValid()?moment(r.minDate):null,this.maxDate=r.maxDate&&moment(r.maxDate).isValid()?moment(r.maxDate):null,this.displayFormat=r.displayFormat||\"ddd, MMM DD\",this.dateFilter=angular.isFunction(r.dateFilter)?r.dateFilter:null,this.selectingYear=!1,this.minDate&&this.maxDate&&this.maxDate.isBefore(this.minDate)&&(this.maxDate=moment(this.minDate).add(1,\"days\")),this.date&&(this.minDate&&this.date.isBefore(this.minDate)&&(this.date=moment(this.minDate)),this.maxDate&&this.date.isAfter(this.maxDate)&&(this.date=moment(this.maxDate))),this.yearItems={currentIndex_:0,PAGE_SIZE:5,START:o.minDate?o.minDate.year():1900,END:o.maxDate?o.maxDate.year():0,getItemAtIndex:function(t){return this.currentIndex_<t&&(this.currentIndex_=t),this.START+t},getLength:function(){return Math.min(this.currentIndex_+Math.floor(this.PAGE_SIZE/2),Math.abs(this.START-this.END)+1)}},t.$mdMedia=a,t.year=this.date.year(),this.selectYear=function(e){o.date.year(e),t.year=e,o.selectingYear=!1,o.animate()},this.showYear=function(){o.yearTopIndex=o.date.year()-o.yearItems.START+Math.floor(o.yearItems.PAGE_SIZE/2),o.yearItems.currentIndex_=o.date.year()-o.yearItems.START+1,o.selectingYear=!0},this.showCalendar=function(){o.selectingYear=!1},this.cancel=function(){e.cancel()},this.confirm=function(){var t=this.date;this.minDate&&this.date.isBefore(this.minDate)&&(t=moment(this.minDate)),this.maxDate&&this.date.isAfter(this.maxDate)&&(t=moment(this.maxDate)),e.hide(t.toDate())},this.animate=function(){o.animating=!0,i(angular.noop).then(function(){o.animating=!1})}}function e(t){var e=this;this.dow=moment.localeData().firstDayOfWeek(),this.weekDays=[].concat(moment.weekdaysMin().slice(this.dow),moment.weekdaysMin().slice(0,this.dow)),this.daysInMonth=[],this.getDaysInMonth=function(){var t=e.date.daysInMonth(),a=moment(e.date).date(1).day()-this.dow;0>a&&(a=this.weekDays.length-1);for(var i=[],n=1;a+t>=n;n++){var r=null;n>a&&(r={value:n-a,enabled:e.isDayEnabled(moment(e.date).date(n-a).toDate())}),i.push(r)}return i},this.isDayEnabled=function(t){return!(this.minDate&&!(this.minDate<=t)||this.maxDate&&!(this.maxDate>=t)||e.dateFilter&&e.dateFilter(t))},this.selectDate=function(t){e.date.date(t)},this.nextMonth=function(){e.date.add(1,\"months\")},this.prevMonth=function(){e.date.subtract(1,\"months\")},this.updateDaysInMonth=function(){e.daysInMonth=e.getDaysInMonth()},t.$watch(function(){return e.date.unix()},function(t,a){t&&t!==a&&e.updateDaysInMonth()}),e.updateDaysInMonth()}function a(t,e){return!t||angular.isDate(t)||moment(t,e,!0).isValid()}function i(t,e,a){var a=moment(a,\"YYYY-MM-DD\",!0),i=angular.isDate(t)?moment(t):moment(t,e,!0);return!t||angular.isDate(t)||!a.isValid()||i.isSameOrAfter(a)}function n(t,e,a){var a=moment(a,\"YYYY-MM-DD\",!0),i=angular.isDate(t)?moment(t):moment(t,e,!0);return!t||angular.isDate(t)||!a.isValid()||i.isSameOrBefore(a)}function r(t,e,a){var i=angular.isDate(t)?moment(t):moment(t,e,!0);return!t||angular.isDate(t)||!angular.isFunction(a)||!a(i)}function o(t,e,a,i,n){var r=this;this.VIEW_HOURS=1,this.VIEW_MINUTES=2,this.currentView=this.VIEW_HOURS,this.time=moment(a),this.autoSwitch=!!i,this.clockHours=parseInt(this.time.format(\"h\")),this.clockMinutes=parseInt(this.time.minutes()),t.$mdMedia=n,this.switchView=function(){r.currentView=r.currentView==r.VIEW_HOURS?r.VIEW_MINUTES:r.VIEW_HOURS},this.setAM=function(){r.time.hours()>=12&&r.time.hour(r.time.hour()-12)},this.setPM=function(){r.time.hours()<12&&r.time.hour(r.time.hour()+12)},this.cancel=function(){e.cancel()},this.confirm=function(){e.hide(this.time.toDate())}}function s(t){var e=\"hours\",a=\"minutes\",i=this;this.STEP_DEG=30,this.steps=[],this.CLOCK_TYPES={hours:{range:12},minutes:{range:60}},this.getPointerStyle=function(){var t=1;switch(i.type){case e:t=12;break;case a:t=60}var n=Math.round(i.selected*(360/t))-180;return{\"-webkit-transform\":\"rotate(\"+n+\"deg)\",\"-ms-transform\":\"rotate(\"+n+\"deg)\",transform:\"rotate(\"+n+\"deg)\"}},this.setTimeByDeg=function(t){t=t>=360?0:t;var n=0;switch(i.type){case e:n=12;break;case a:n=60}i.setTime(Math.round(n/360*t))},this.setTime=function(t,n){switch(this.selected=t,i.type){case e:\"PM\"==i.time.format(\"A\")&&(t+=12),this.time.hours(t);break;case a:t>59&&(t-=60),this.time.minutes(t)}},this.init=function(){switch(i.type=i.type||\"hours\",i.type){case e:for(var t=1;12>=t;t++)i.steps.push(t);i.selected=i.time.hours()||0,i.selected>12&&(i.selected-=12);break;case a:for(var t=5;55>=t;t+=5)i.steps.push(t);i.steps.push(0),i.selected=i.time.minutes()||0}},this.init()}var d=angular.module(\"mdPickers\",[\"ngMaterial\",\"ngAnimate\",\"ngAria\"]);d.config([\"$mdIconProvider\",\"mdpIconsRegistry\",function(t,e){angular.forEach(e,function(e,a){t.icon(e.id,e.url)})}]),d.run([\"$templateCache\",\"mdpIconsRegistry\",function(t,e){angular.forEach(e,function(e,a){t.put(e.url,e.svg)})}]),d.constant(\"mdpIconsRegistry\",[{id:\"mdp-chevron-left\",url:\"mdp-chevron-left.svg\",svg:'<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'},{id:\"mdp-chevron-right\",url:\"mdp-chevron-right.svg\",svg:'<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'},{id:\"mdp-access-time\",url:\"mdp-access-time.svg\",svg:'<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'},{id:\"mdp-event\",url:\"mdp-event.svg\",svg:'<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'}]),d.directive(\"ngMessage\",[\"$mdUtil\",function(t){return{restrict:\"EA\",priority:101,compile:function(e){var a=t.getClosest(e,\"mdp-time-picker\",!0)||t.getClosest(e,\"mdp-date-picker\",!0);if(a)return e.toggleClass(\"md-input-message-animation\",!0),{}}}}]),d.provider(\"$mdpDatePicker\",function(){var e=\"OK\",a=\"Cancel\",i=\"ddd, MMM DD\";this.setDisplayFormat=function(t){i=t},this.setOKButtonLabel=function(t){e=t},this.setCancelButtonLabel=function(t){a=t},this.$get=[\"$mdDialog\",function(n){var r=function(r,o){return angular.isDate(r)||(r=Date.now()),angular.isObject(o)||(o={}),o.displayFormat=i,n.show({controller:[\"$scope\",\"$mdDialog\",\"$mdMedia\",\"$timeout\",\"currentDate\",\"options\",t],controllerAs:\"datepicker\",clickOutsideToClose:!0,template:'<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\"><md-dialog-content layout=\"row\" layout-wrap><div layout=\"column\" layout-align=\"start center\"><md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\"><span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span><span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> </md-toolbar></div><div><div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\"><md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\"><div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\"><span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span></div></md-virtual-repeat-container></div><mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar><md-dialog-actions layout=\"row\"><span flex></span><md-button ng-click=\"datepicker.cancel()\" aria-label=\"'+a+'\">'+a+'</md-button><md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"'+e+'\">'+e+\"</md-button></md-dialog-actions></div></md-dialog-content></md-dialog>\",targetEvent:o.targetEvent,locals:{currentDate:r,options:o},skipHide:!0})};return r}]}),d.directive(\"mdpCalendar\",[\"$animate\",function(t){return{restrict:\"E\",bindToController:{date:\"=\",minDate:\"=\",maxDate:\"=\",dateFilter:\"=\"},template:'<div class=\"mdp-calendar\"><div layout=\"row\" layout-align=\"space-between center\"><md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button><div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div><md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button></div><div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\"><div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div></div><div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\"><div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\"><md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button></div><div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div></div></div>',controller:[\"$scope\",e],controllerAs:\"calendar\",link:function(e,a,i,n){var r=[a[0].querySelector(\".mdp-calendar-week-days\"),a[0].querySelector(\".mdp-calendar-days\"),a[0].querySelector(\".mdp-calendar-monthyear\")].map(function(t){return angular.element(t)});e.$watch(function(){return n.date.format(\"YYYYMM\")},function(e,a){var i=null;if(e>a?i=\"mdp-animate-next\":a>e&&(i=\"mdp-animate-prev\"),i)for(var n in r)r[n].addClass(i),t.removeClass(r[n],i)})}}}]),d.directive(\"mdpDatePicker\",[\"$mdpDatePicker\",\"$timeout\",function(t,e){return{restrict:\"E\",require:\"ngModel\",transclude:!0,template:function(t,e){var a=angular.isDefined(e.mdpNoFloat),i=angular.isDefined(e.mdpPlaceholder)?e.mdpPlaceholder:\"\",n=angular.isDefined(e.mdpOpenOnClick)?!0:!1;return'<div layout layout-align=\"start start\"><md-button'+(angular.isDefined(e.mdpDisabled)?' ng-disabled=\"disabled\"':\"\")+' class=\"md-icon-button\" ng-click=\"showPicker($event)\"><md-icon md-svg-icon=\"mdp-event\"></md-icon></md-button><md-input-container'+(a?\" md-no-float\":\"\")+' md-is-error=\"isError()\"><input type=\"{{ ::type }}\"'+(angular.isDefined(e.mdpDisabled)?' ng-disabled=\"disabled\"':\"\")+' aria-label=\"'+i+'\" placeholder=\"'+i+'\"'+(n?' ng-click=\"showPicker($event)\" ':\"\")+\" /></md-input-container></div>\"},scope:{minDate:\"=mdpMinDate\",maxDate:\"=mdpMaxDate\",dateFilter:\"=mdpDateFilter\",dateFormat:\"@mdpFormat\",placeholder:\"@mdpPlaceholder\",noFloat:\"=mdpNoFloat\",openOnClick:\"=mdpOpenOnClick\",disabled:\"=?mdpDisabled\"},link:{pre:function(t,e,a,i,n){},post:function(e,o,s,d,m){function c(t){p[0].value=t,g.setHasValue(!d.$isEmpty(t))}function l(t){var a=moment(t,angular.isDate(t)?null:e.dateFormat,!0),i=a.format(e.dateFormat);a.isValid()?(c(i),d.$setViewValue(i)):(c(t),d.$setViewValue(t)),!d.$pristine&&f.hasClass(\"md-auto-hide\")&&h.hasClass(\"md-input-invalid\")&&f.removeClass(\"md-auto-hide\"),d.$render()}function u(t){t.target.value!==d.$viewVaue&&l(t.target.value)}var p=angular.element(o[0].querySelector(\"input\")),h=angular.element(o[0].querySelector(\"md-input-container\")),g=h.controller(\"mdInputContainer\");m(function(t){h.append(t)});var f=angular.element(h[0].querySelector(\"[ng-messages]\"));e.type=e.dateFormat?\"text\":\"date\",e.dateFormat=e.dateFormat||\"YYYY-MM-DD\",e.model=d,e.isError=function(){return!d.$pristine&&!!d.$invalid},d.$formatters.unshift(function(t){var a=angular.isDate(t)&&moment(t);c(a&&a.isValid()?a.format(e.dateFormat):null)}),d.$validators.format=function(t,i){return a(i,e.dateFormat)},d.$validators.minDate=function(t,a){return i(a,e.dateFormat,e.minDate)},d.$validators.maxDate=function(t,a){return n(a,e.dateFormat,e.maxDate)},d.$validators.filter=function(t,a){return r(a,e.dateFormat,e.dateFilter)},d.$validators.required=function(t,e){return angular.isUndefined(s.required)||!d.$isEmpty(t)||!d.$isEmpty(e)},d.$parsers.unshift(function(t){var a=moment(t,e.dateFormat,!0);if(a.isValid()){if(angular.isDate(d.$modelValue)){var i=moment(d.$modelValue);i.year(a.year()),i.month(a.month()),i.date(a.date()),a=i}return a.toDate()}return null}),e.showPicker=function(a){t(d.$modelValue,{minDate:e.minDate,maxDate:e.maxDate,dateFilter:e.dateFilter,targetEvent:a}).then(l)},p.on(\"reset input blur\",u),e.$on(\"$destroy\",function(){p.off(\"reset input blur\",u)})}}}}]),d.directive(\"mdpDatePicker\",[\"$mdpDatePicker\",\"$timeout\",function(t,e){return{restrict:\"A\",require:\"ngModel\",scope:{minDate:\"@min\",maxDate:\"@max\",dateFilter:\"=mdpDateFilter\",dateFormat:\"@mdpFormat\"},link:function(e,o,s,d,m){function c(a){t(d.$modelValue,{minDate:e.minDate,maxDate:e.maxDate,dateFilter:e.dateFilter,targetEvent:a}).then(function(t){d.$setViewValue(moment(t).format(e.format)),d.$render()})}e.dateFormat=e.dateFormat||\"YYYY-MM-DD\",d.$validators.format=function(t,i){return a(i,e.format)},d.$validators.minDate=function(t,a){return i(a,e.format,e.minDate)},d.$validators.maxDate=function(t,a){return n(a,e.format,e.maxDate)},d.$validators.filter=function(t,a){return r(a,e.format,e.dateFilter)},o.on(\"click\",c),e.$on(\"$destroy\",function(){o.off(\"click\",c)})}}}]),d.directive(\"mdpClock\",[\"$animate\",\"$timeout\",function(t,e){return{restrict:\"E\",bindToController:{type:\"@?\",time:\"=\",autoSwitch:\"=?\"},replace:!0,template:'<div class=\"mdp-clock\"><div class=\"mdp-clock-container\"><md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar><md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\"><span class=\"mdp-clock-selected md-button md-raised md-primary\"></span></md-toolbar><md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button></div></div>',controller:[\"$scope\",s],controllerAs:\"clock\",link:function(t,a,i,n){var r=(angular.element(a[0].querySelector(\".mdp-pointer\")),t.$parent.timepicker),o=function(t){var a=t.currentTarget.getClientRects()[0],i=t.currentTarget.offsetWidth/2-(t.pageX-a.left),o=t.pageY-a.top-t.currentTarget.offsetHeight/2,s=Math.round(Math.atan2(i,o)*(180/Math.PI));e(function(){n.setTimeByDeg(s+180),n.autoSwitch&&-1!==[\"mouseup\",\"click\"].indexOf(t.type)&&r&&r.switchView()})};a.on(\"mousedown\",function(){a.on(\"mousemove\",o)}),a.on(\"mouseup\",function(t){a.off(\"mousemove\")}),a.on(\"click\",o),t.$on(\"$destroy\",function(){a.off(\"click\",o),a.off(\"mousemove\",o)})}}}]),d.provider(\"$mdpTimePicker\",function(){var t=\"OK\",e=\"Cancel\";this.setOKButtonLabel=function(e){t=e},this.setCancelButtonLabel=function(t){e=t},this.$get=[\"$mdDialog\",function(a){var i=function(i,n){return angular.isDate(i)||(i=Date.now()),angular.isObject(n)||(n={}),a.show({controller:[\"$scope\",\"$mdDialog\",\"time\",\"autoSwitch\",\"$mdMedia\",o],controllerAs:\"timepicker\",clickOutsideToClose:!0,template:'<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\"><md-dialog-content layout-gt-xs=\"row\" layout-wrap><md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\"><div class=\"mdp-timepicker-selected-time\"><span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span></div><div layout=\"column\" class=\"mdp-timepicker-selected-ampm\"><span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span><span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span></div></md-toolbar><div><div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\"><mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock><mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock></div><md-dialog-actions layout=\"row\"><span flex></span><md-button ng-click=\"timepicker.cancel()\" aria-label=\"'+e+'\">'+e+'</md-button><md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"'+t+'\">'+t+\"</md-button></md-dialog-actions></div></md-dialog-content></md-dialog>\",targetEvent:n.targetEvent,locals:{time:i,autoSwitch:n.autoSwitch},skipHide:!0})};return i}]}),d.directive(\"mdpTimePicker\",[\"$mdpTimePicker\",\"$timeout\",function(t,e){return{restrict:\"E\",require:\"ngModel\",transclude:!0,template:function(t,e){var a=angular.isDefined(e.mdpNoFloat),i=angular.isDefined(e.mdpPlaceholder)?e.mdpPlaceholder:\"\",n=angular.isDefined(e.mdpOpenOnClick)?!0:!1;return'<div layout layout-align=\"start start\"><md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"'+(angular.isDefined(e.mdpDisabled)?' ng-disabled=\"disabled\"':\"\")+'><md-icon md-svg-icon=\"mdp-access-time\"></md-icon></md-button><md-input-container'+(a?\" md-no-float\":\"\")+' md-is-error=\"isError()\"><input type=\"{{ ::type }}\"'+(angular.isDefined(e.mdpDisabled)?' ng-disabled=\"disabled\"':\"\")+' aria-label=\"'+i+'\" placeholder=\"'+i+'\"'+(n?' ng-click=\"showPicker($event)\" ':\"\")+\" /></md-input-container></div>\"},scope:{timeFormat:\"@mdpFormat\",placeholder:\"@mdpPlaceholder\",autoSwitch:\"=?mdpAutoSwitch\",disabled:\"=?mdpDisabled\"},link:function(e,a,i,n,r){function o(t){m[0].value=t,l.setHasValue(!n.$isEmpty(t))}function s(t){var a=moment(t,angular.isDate(t)?null:e.timeFormat,!0),i=a.format(e.timeFormat);a.isValid()?(o(i),n.$setViewValue(i)):(o(t),n.$setViewValue(t)),!n.$pristine&&u.hasClass(\"md-auto-hide\")&&c.hasClass(\"md-input-invalid\")&&u.removeClass(\"md-auto-hide\"),n.$render()}function d(t){t.target.value!==n.$viewVaue&&s(t.target.value)}var m=angular.element(a[0].querySelector(\"input\")),c=angular.element(a[0].querySelector(\"md-input-container\")),l=c.controller(\"mdInputContainer\");r(function(t){c.append(t)});var u=angular.element(c[0].querySelector(\"[ng-messages]\"));e.type=e.timeFormat?\"text\":\"time\",e.timeFormat=e.timeFormat||\"HH:mm\",e.autoSwitch=e.autoSwitch||!1,e.$watch(function(){return n.$error},function(t,e){l.setInvalid(!n.$pristine&&!!Object.keys(n.$error).length)},!0),n.$formatters.unshift(function(t){var a=angular.isDate(t)&&moment(t);o(a&&a.isValid()?a.format(e.timeFormat):null)}),n.$validators.format=function(t,a){return!a||angular.isDate(a)||moment(a,e.timeFormat,!0).isValid()},n.$validators.required=function(t,e){return angular.isUndefined(i.required)||!n.$isEmpty(t)||!n.$isEmpty(e)},n.$parsers.unshift(function(t){var a=moment(t,e.timeFormat,!0);if(a.isValid()){if(angular.isDate(n.$modelValue)){var i=moment(n.$modelValue);i.minutes(a.minutes()),i.hours(a.hours()),i.seconds(a.seconds()),a=i}return a.toDate()}return null}),e.showPicker=function(a){t(n.$modelValue,{targetEvent:a,autoSwitch:e.autoSwitch}).then(function(t){s(t,!0)})},m.on(\"reset input blur\",d),e.$on(\"$destroy\",function(){m.off(\"reset input blur\",d)})}}}]),d.directive(\"mdpTimePicker\",[\"$mdpTimePicker\",\"$timeout\",function(t,e){return{restrict:\"A\",require:\"ngModel\",scope:{timeFormat:\"@mdpFormat\",autoSwitch:\"=?mdpAutoSwitch\"},link:function(e,a,i,n,r){function o(a){t(n.$modelValue,{targetEvent:a,autoSwitch:e.autoSwitch}).then(function(t){n.$setViewValue(moment(t).format(e.format)),n.$render()})}e.format=e.format||\"HH:mm\",a.on(\"click\",o),e.$on(\"$destroy\",function(){a.off(\"click\",o)})}}}])}();\n//# sourceMappingURL=mdPickers.min.js.map\n","var registerApp = angular.module('appRegister', ['ngMaterial', 'ngRoute', 'ngResource', 'ngMessages', 'ngCookies', 'mdPickers']);\r\nregisterApp.config(function ($mdThemingProvider, $interpolateProvider) {\r\n    $mdThemingProvider.definePalette('customTheme', customTheme);\r\n    $mdThemingProvider.theme('default')\r\n        .primaryPalette('customTheme');\r\n    $interpolateProvider.startSymbol('<%');\r\n    $interpolateProvider.endSymbol('%>');\r\n});\r\n\r\nvar loginApp = angular.module('appLogin', ['ngMaterial', 'ngRoute', 'ngResource', 'ngMessages', 'ngCookies']);\r\nloginApp.config(function ($mdThemingProvider, $interpolateProvider) {\r\n    $mdThemingProvider.definePalette('customTheme', customTheme);\r\n    $mdThemingProvider.theme('default')\r\n        .primaryPalette('customTheme');\r\n    $interpolateProvider.startSymbol('<%');\r\n    $interpolateProvider.endSymbol('%>');\r\n});\r\n\r\nvar welcomeApp = angular.module('appWelcome', ['ngMaterial', 'ngRoute', 'ngResource']);\r\n\r\n\r\nvar portalApp = angular.module('appTeacherDashboard', ['ngMaterial', 'ngRoute', 'ngResource', 'ngMessages', 'ngCookies', 'ngFileUpload', 'ngImgCrop', 'angularTrix', 'ngSanitize']);\r\nportalApp.config(function ($mdThemingProvider, $interpolateProvider) {\r\n    $mdThemingProvider.definePalette('customTheme', customTheme);\r\n    $mdThemingProvider.theme('default')\r\n        .primaryPalette('customTheme');\r\n    $interpolateProvider.startSymbol('<%');\r\n    $interpolateProvider.endSymbol('%>');\r\n});\r\n\r\nvar customTheme = {\r\n    '50': '3c092c',\r\n    '100': '3c092c',\r\n    '200': '3c092c',\r\n    '300': '7F1369', //hue-1\r\n    '400': '3c092c',\r\n    '500': '2E4454', //toolbar\r\n    '600': '3c092c',\r\n    '700': '3c092c',\r\n    '800': 'facd3e', //hue-2\r\n    '900': '3c092c',\r\n    'A100': '6737FF', //hue-3 and accent\r\n    'A200': '6737FF',\r\n    'A400': '6737FF',\r\n    'A700': '6737FF',\r\n    'contrastDefaultColor': 'light',    // whether, by default, text (contrast)\r\n                                        // on this palette should be dark or light\r\n    'contrastDarkColors': ['50', '100', //hues which contrast should be 'dark' by default\r\n        '200', '300', '400', 'A100'],\r\n    'contrastLightColors': 'light'    // could also specify this if default was 'dark'\r\n};","portalApp.factory('Data', function () {\r\n    return {\r\n        EventId: null,\r\n        AddEventType: null,\r\n        SelectedNotificationId: null,\r\n        PostId: null,\r\n        PersonId: null,\r\n        PersonTable: null,\r\n        SelectedMentor: null,\r\n        SelectedLessonId: null,\r\n        SelectedReservationId: null\r\n    };\r\n});\r\n","portalApp.service('ProfileService', function ($cookies, $http) {\r\n        \r\n\r\n    })\r\n    .service('SectionService', function(){\r\n        this.sections=[\r\n            {name:'Announcement', url: 'svg/ic_announcement_white_48px.svg', access_level:'123'},\r\n            {name:'Notification', url: 'svg/ic_notifications_white_48px.svg', access_level:'123'},\r\n            {name:'Schedule', url: 'svg/ic_event_white_48px.svg', access_level:'123'},\r\n            {name:'People', url: 'svg/ic_people_white_48px.svg', access_level:'123'},\r\n            {name:'Mentor-schedule', url: 'svg/ic_event_note_white_48px.svg', access_level:'123'},\r\n            {name:'Attendance', url: 'svg/ic_assessment_white_48px.svg', access_level:'3'},\r\n            {name:'Settings', url: 'svg/ic_settings_white_48px.svg', access_level:'3'}\r\n        ];\r\n    })\r\n    .service('PeopleService', function ($http) {\r\n        var getPeople = function() {\r\n            return $http({method:\"GET\", url:\"php/getUsers.php\"}).then(function(result){\r\n                return result.data;\r\n            });\r\n        };\r\n        return { getPeople: getPeople };\r\n    })","portalApp.filter('capitalize', function() {\r\n    return function(input) {\r\n        return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\r\n    }\r\n})\r\n    .filter('orderObjectBy', function(){\r\n        return function(input, attribute) {\r\n            if (!angular.isObject(input)) return input;\r\n\r\n            var array = [];\r\n            for(var objectKey in input) {\r\n                array.push(input[objectKey]);\r\n            }\r\n\r\n            array.sort(function(a, b){\r\n                a = parseInt(a[attribute]);\r\n                b = parseInt(b[attribute]);\r\n                return a - b;\r\n            });\r\n            return array;\r\n        }\r\n    });\r\n","portalApp.directive(\"dropzoneSyllabus\", function(ProfileService) {\r\n        return {\r\n            restrict : \"A\",\r\n            link: function (scope, elem) {\r\n                elem.bind('dragover', function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                });\r\n                elem.bind('dragenter', function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    scope.$apply(function () {\r\n                        scope.divClass = 'on-drag-enter';\r\n                    });\r\n                });\r\n                elem.bind('dragleave', function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    scope.$apply(function () {\r\n                        scope.divClass = '';\r\n                    });\r\n                });\r\n                elem.bind('drop', function(evt) {\r\n                    evt.stopPropagation();\r\n                    evt.preventDefault();\r\n                    var files = evt.dataTransfer.files;\r\n                    for (var i = 0, f; f = files[i]; i++) {\r\n                        var reader = new FileReader();\r\n                        reader.readAsArrayBuffer(f);\r\n\r\n                        reader.onload = (function(theFile) {\r\n                            return function(e) {\r\n                                var newFile = { name : theFile.name,\r\n                                    type : theFile.type,\r\n                                    size : theFile.size,\r\n                                    lastModifiedDate : theFile.lastModifiedDate\r\n                                };\r\n                                ProfileService.syllabuses.push(newFile);\r\n                            };\r\n                        })(f);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    })\r\n    .directive(\"dropzoneMaterial\", function(ProfileService) {\r\n        return {\r\n            restrict : \"A\",\r\n            link: function (scope, elem) {\r\n                elem.bind('dragover', function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                });\r\n                elem.bind('dragenter', function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    scope.$apply(function () {\r\n                        scope.divClass = 'on-drag-enter';\r\n                    });\r\n                });\r\n                elem.bind('dragleave', function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    scope.$apply(function () {\r\n                        scope.divClass = '';\r\n                    });\r\n                });\r\n                elem.bind('drop', function(evt) {\r\n                    evt.stopPropagation();\r\n                    evt.preventDefault();\r\n                    var files = evt.dataTransfer.files;\r\n                    for (var i = 0, f; f = files[i]; i++) {\r\n                        var reader = new FileReader();\r\n                        reader.readAsArrayBuffer(f);\r\n\r\n                        reader.onload = (function(theFile) {\r\n                            return function(e) {\r\n                                var newFile = { name : theFile.name,\r\n                                    type : theFile.type,\r\n                                    size : theFile.size,\r\n                                    lastModifiedDate : theFile.lastModifiedDate\r\n                                };\r\n                                ProfileService.materials.push(newFile);\r\n                            };\r\n                        })(f);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n","registerApp.controller('RegisterController', function ($scope) {\r\n    $scope.user = {};\r\n    var today = new Date();\r\n    var today1 = moment(today);\r\n    $scope.maxDate = today1.format('YYYY-MM-DD');\r\n\r\n    $scope.birthDateFormatted = function () {\r\n        return moment($scope.user.birthDate).format('MM-DD-YYYY')\r\n    };\r\n});\r\n\r\nloginApp.controller('LoginController', function () {\r\n});\r\n\r\nportalApp.controller('MainMenuController', function ($scope, $rootScope, $cookies, $mdDialog, $mdMedia, $timeout, $mdSidenav, $http, $location, Data) {\r\n    $scope.toggleNavBar = buildDelayedToggler('left');\r\n\r\n    $scope.user_name = '';\r\n    $scope.user_email = '';\r\n    $scope.user_type = '';\r\n    $scope.user_id = '';\r\n\r\n    $rootScope.notification_count = 0;\r\n\r\n    $http.get('/getUser').success(function (result) {\r\n        $cookies.put('userId', result['id']);\r\n        $cookies.put('userName', result['name']);\r\n        $cookies.put('userEmail', result['email']);\r\n        $cookies.put('userType', result['type']);\r\n        $scope.$emit('setUserType', result['type']);\r\n        $cookies.put('userProfileImage', result['profile_image_path']);\r\n        if (result['type'] == 'student') {\r\n            $cookies.put('userGroupId', result['group_id']);\r\n        }\r\n\r\n        $scope.user_name = $cookies.get('userName');\r\n        $scope.user_email = $cookies.get('userEmail');\r\n        $scope.user_type = $cookies.get('userType');\r\n        $scope.user_id = $cookies.get('userId');\r\n        $scope.user_profile_pic = $cookies.get('userProfileImage');\r\n\r\n        if ($scope.user_type == 'student') {\r\n            var user_group_id = $cookies.get('userGroupId');\r\n            $http.get('/getNotificationsCount/groups/' + user_group_id).success(function (data) {\r\n                $rootScope.notification_count += parseInt(data);\r\n            });\r\n            $http.get('/getNotificationsCount/students/' + $scope.user_id).success(function (data) {\r\n                $rootScope.notification_count += parseInt(data);\r\n            }).error(function (data) {\r\n                console.log(data);\r\n            });\r\n        }\r\n        else if ($scope.user_type == 'mentor') {\r\n            $http.get('/getNotificationsCount/mentors/' + $scope.user_id).success(function (data) {\r\n                $rootScope.notification_count += parseInt(data);\r\n            });\r\n        }\r\n    });\r\n\r\n    //get the css property of element\r\n    function getStyle(elementId, property) {\r\n        return document.defaultView.getComputedStyle(document.getElementById(elementId), '').getPropertyValue(property);\r\n    }\r\n\r\n    //hide drop down profile menu when lost focus\r\n    $scope.hideDropDown = function () {\r\n        setTimeout(function () {\r\n            $('#dropDown').hide()\r\n        }, 500);\r\n    };\r\n\r\n    //toggle drop down profile menu when profile image pressed\r\n    $('#toggleDropDown').click(function () {\r\n        var temp = $('#dropDown');\r\n        temp.toggle();\r\n        if (getStyle('dropDown', 'display') == 'block')\r\n            temp.focus();\r\n    });\r\n\r\n    //initializing the display to show dialog in full screen mode\r\n    $scope.customFullscreen = $mdMedia('xs') || $mdMedia('sm');\r\n    var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\r\n\r\n    /**\r\n     * Show the image change pop-up menu\r\n     */\r\n    $scope.changeProfileImage = function () {\r\n        Data.ChangeProfilePersonId = $scope.user_id;\r\n        Data.ChangeProfilePersonTable = $scope.user_type + 's';\r\n\r\n        $mdDialog.show({\r\n            controller: changeProfilePictureController,\r\n            templateUrl: 'dialogs/changeProfilePictureDialog.html',\r\n            parent: angular.element(document.body),\r\n            clickOutsideToClose: true,\r\n            fullscreen: useFullScreen\r\n        });\r\n        $scope.$watch(function () {\r\n            return $mdMedia('xs') || $mdMedia('sm');\r\n        }, function (wantsFullScreen) {\r\n            $scope.customFullscreen = (wantsFullScreen === true);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open the edit profile dialog\r\n     */\r\n    $scope.editProfile = function () {\r\n        Data.PersonTable = $scope.user_type + 's';\r\n        Data.PersonId = $scope.user_id;\r\n\r\n        $mdDialog.show({\r\n            controller: personEditDialogController,\r\n            templateUrl: 'dialogs/personEditDialog.html',\r\n            parent: angular.element(document.body),\r\n            clickOutsideToClose: true,\r\n            fullscreen: useFullScreen\r\n        });\r\n        $scope.$watch(function () {\r\n            return $mdMedia('xs') || $mdMedia('sm');\r\n        }, function (wantsFullScreen) {\r\n            $scope.customFullscreen = (wantsFullScreen === true);\r\n        });\r\n    };\r\n\r\n    function debounce(func, wait, context) {\r\n        var timer;\r\n        return function debounced() {\r\n            var context = $scope,\r\n                args = Array.prototype.slice.call(arguments);\r\n            $timeout.cancel(timer);\r\n            timer = $timeout(function () {\r\n                timer = undefined;\r\n                func.apply(context, args);\r\n            }, wait || 10);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Build handler to open/close a SideNav\r\n     */\r\n    function buildDelayedToggler(navID) {\r\n        return debounce(function () {\r\n            if ($mdSidenav(navID).isOpen()) {\r\n                $mdSidenav(navID)\r\n                    .close()\r\n            } else {\r\n                $mdSidenav(navID)\r\n                    .open()\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    $scope.openNotification = function () {\r\n        $location.path('/notification');\r\n    }\r\n})\r\n    .controller('SectionListController', function ($scope, $location, $http, $cookies, $rootScope, Data, SectionService) {\r\n        /*\r\n         $http.get('/getSections').success(function (data) {\r\n         $scope.sections = data;\r\n         });\r\n         */\r\n        $scope.sections = SectionService.sections;\r\n\r\n        $scope.$on('setUserType', function(event, args) {\r\n            $scope.user_type = args;\r\n        });\r\n\r\n        $scope.user_access_level = function () {\r\n            if ($scope.user_type === 'student')\r\n                return 1;\r\n            else if ($scope.user_type === 'mentor')\r\n                return 2;\r\n            else if ($scope.user_type === 'teacher')\r\n                return 3;\r\n        };\r\n\r\n        $scope.selectSection = function (text) {\r\n            $rootScope.current_section = text;\r\n            $location.path('/' + text.toLowerCase());\r\n        };\r\n\r\n    })\r\n    .controller('AnnouncementController', function ($scope, $rootScope, $mdDialog, $mdMedia, $mdToast, $http, $cookies, $route, Data) {\r\n        $rootScope.current_section = 'Announcement';\r\n        $scope.announcement_post = '';\r\n        $scope.selected = [];\r\n        $scope.user_type = $cookies.get('userType');\r\n        $scope.user_id = $cookies.get('userId');\r\n\r\n        //initialize loading\r\n        $scope.loader = {\r\n            loading: true,\r\n            posting: false\r\n        };\r\n\r\n        $http.get('/getAnnouncements').success(function (data) {\r\n            $scope.announcements = data[0];\r\n            for (var i = 0; i < $scope.announcements.length; i++) {\r\n                $scope.announcements[i].groups = data[1][i];\r\n                $scope.announcements[i].owner = data[2][i];\r\n            }\r\n            $scope.loader.loading = false;\r\n        });\r\n\r\n        $http.get('/getGroups').success(function (data) {\r\n            $scope.groups = data;\r\n        });\r\n\r\n        $scope.post = function () {\r\n            $scope.user_id = $cookies.get('userId');\r\n            $scope.loader.posting = true;\r\n            $http({\r\n                method: 'POST',\r\n                url: '/postAnnouncement',\r\n                data: {\r\n                    body: $scope.announcement_post,\r\n                    owner_id: $scope.user_id,\r\n                    group_list: $scope.selected\r\n                }\r\n            }).success(function () {\r\n                $scope.announcement_post = '';\r\n                $scope.selected = [];\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('Posted'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            })\r\n        };\r\n\r\n        $scope.deletePost = function (index) {\r\n            var confirm = $mdDialog.confirm()\r\n                .title('Are you sure to delete announcement?')\r\n                .ok('Delete')\r\n                .cancel('Cancel');\r\n            $mdDialog.show(confirm).then(function () {\r\n                $http({\r\n                    method: 'POST',\r\n                    url: '/deleteAnnouncement',\r\n                    data: {id: $scope.announcements[index].id}\r\n                }).success(function () {\r\n                    $route.reload();\r\n                    $mdToast.show($mdToast.simple().textContent('Deleted'));\r\n                }).error(function (data) {\r\n                    $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                    console.log(data);\r\n                })\r\n            });\r\n        };\r\n\r\n        $scope.editPost = function (index) {\r\n            Data.PostId = $scope.announcements[index].id;\r\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\r\n            $mdDialog.show({\r\n                controller: postEditDialogController,\r\n                templateUrl: 'dialogs/editPostDialog.html',\r\n                parent: angular.element(document.body),\r\n                clickOutsideToClose: true,\r\n                fullscreen: useFullScreen\r\n            });\r\n            $scope.$watch(function () {\r\n                return $mdMedia('xs') || $mdMedia('sm');\r\n            }, function (wantsFullScreen) {\r\n                $scope.customFullscreen = (wantsFullScreen === true);\r\n            });\r\n        };\r\n\r\n        $scope.toggle = function (item, list) {\r\n            var idx = list.indexOf(item);\r\n            if (idx > -1) list.splice(idx, 1);\r\n            else list.push(item);\r\n        };\r\n\r\n        $scope.exists = function (item, list) {\r\n            return list.indexOf(item) > -1;\r\n        };\r\n\r\n    })\r\n    .controller('AttendanceController', function ($scope, $rootScope, $mdDialog, $mdMedia, $mdToast, $http, $cookies, $route, Data) {\r\n        $rootScope.current_section = 'Attendance';\r\n\r\n        $scope.loader = {\r\n            loading: false,\r\n            posting: false\r\n        };\r\n\r\n        $scope.students = [];\r\n        $scope.groups = [];\r\n        var date = new Date();\r\n        $scope.momentDate = moment(date);\r\n        $scope.show_list = [];\r\n        $scope.attendances = [];\r\n\r\n        $scope.showFormattedDate = function () {\r\n            return $scope.momentDate.format('dddd, MMMM DD YYYY');\r\n        };\r\n\r\n        $scope.addDayToDate = function () {\r\n            $scope.momentDate.add(1, 'd');\r\n            updateDate();\r\n        };\r\n\r\n        $scope.subtractDayFromDate = function () {\r\n            $scope.momentDate.subtract(1, 'd');\r\n            updateDate();\r\n        };\r\n\r\n        $http.get('/getGroups').success(function (data) {\r\n            $scope.groups = data;\r\n            for (var i = 0; i < $scope.groups.length; i++) {\r\n                $scope.show_list[i] = false;\r\n            }\r\n        });\r\n\r\n        updateDate();\r\n\r\n        function updateDate() {\r\n            $scope.loader.loading = true;\r\n            $http.get('/getStudentsWithAttendances/' + $scope.momentDate.format('YYYYMMDD')).success(function (data) {\r\n                $scope.students = data;\r\n                $scope.loader.loading = false;\r\n            });\r\n        }\r\n\r\n        $scope.toggleList = function (index) {\r\n            $scope.show_list[index] = !$scope.show_list[index];\r\n        };\r\n\r\n        $scope.searchEvent = function ($event) {\r\n            $event.stopPropagation();\r\n        };\r\n\r\n        $scope.postAttendance = function () {\r\n            $scope.loader.posting = true;\r\n\r\n            for (var i = 0; i < $scope.students.length; i++) {\r\n                $scope.attendances[i] = $scope.students[i].attendance;\r\n                $scope.attendances[i].student_id = $scope.students[i].id;\r\n                $scope.attendances[i].note = $scope.students[i].attendance.note;\r\n                $scope.attendances[i].status = parseInt($scope.students[i].attendance.status);\r\n            }\r\n\r\n            $http({\r\n                method: 'POST',\r\n                url: '/postAttendance',\r\n                data: {\r\n                    date: $scope.momentDate.format('YYYYMMDD'),\r\n                    attendances: $scope.attendances\r\n                }\r\n            }).success(function () {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('User type changed'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            })\r\n        }\r\n    })\r\n    .controller('PeopleController', function ($http, $scope, $rootScope, $cookies, $route, $mdDialog, $mdMedia, $mdToast, Data) {\r\n        $rootScope.current_section = 'People';\r\n        $scope.user_type = $cookies.get('userType');\r\n        $scope.students = [];\r\n        $scope.teachers = [];\r\n        $scope.mentors = [];\r\n        $scope.pending = [];\r\n        $scope.groups = [];\r\n        $scope.show_list = [];\r\n\r\n        $scope.loader = {\r\n            loading: false,\r\n            posting: false\r\n        };\r\n\r\n        $scope.selected_group_id = null;\r\n\r\n        if ($scope.user_type == 'teacher')\r\n            $http.get('/getPending').success(function (data) {\r\n                $scope.pending = data;\r\n                $scope.loader.loading = false;\r\n            });\r\n\r\n        if ($scope.user_type != 'student') {\r\n            $http.get('/getGroups').success(function (data) {\r\n                $scope.groups = data;\r\n                for (var i = 0; i < $scope.groups.length; i++) {\r\n                    $scope.show_list[i] = true;\r\n                }\r\n            });\r\n            $http.get('/getStudents').success(function (data) {\r\n                $scope.students = data;\r\n            });\r\n        }\r\n\r\n        $http.get('/getMentors').success(function (data) {\r\n            $scope.mentors = data;\r\n        });\r\n\r\n        $http.get('/getTeachers').success(function (data) {\r\n            $scope.teachers = data;\r\n            $scope.loader.loading = false;\r\n        });\r\n\r\n        $scope.selectedIndex = 0;\r\n\r\n        $scope.toggleList = function (index) {\r\n            $scope.show_list[index] = !$scope.show_list[index];\r\n        };\r\n\r\n        $scope.searchEvent = function ($event) {\r\n            $event.stopPropagation();\r\n        };\r\n\r\n        $scope.customFullscreen = $mdMedia('xs') || $mdMedia('sm');\r\n\r\n        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\r\n\r\n        $scope.showContact = function (id, table) {\r\n            Data.PersonId = id;\r\n            Data.PersonTable = table;\r\n\r\n            $mdDialog.show({\r\n                controller: personSelectDialogController,\r\n                templateUrl: 'dialogs/personSelectDialog.html',\r\n                parent: angular.element(document.body),\r\n                clickOutsideToClose: true,\r\n                fullscreen: useFullScreen\r\n            });\r\n            $scope.$watch(function () {\r\n                return $mdMedia('xs') || $mdMedia('sm');\r\n            }, function (wantsFullScreen) {\r\n                $scope.customFullscreen = (wantsFullScreen === true);\r\n            });\r\n        };\r\n\r\n        $scope.changeType = function (id, type, selected_group_id) {\r\n            $scope.loader.posting = true;\r\n            $http({\r\n                method: 'POST',\r\n                url: '/changeUserType',\r\n                data: {\r\n                    id: id,\r\n                    type: type,\r\n                    group_id: selected_group_id\r\n                }\r\n            }).success(function () {\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('User type changed'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            })\r\n        };\r\n\r\n        $scope.deleteUser = function (id) {\r\n            $scope.loader.posting = true;\r\n            $http({\r\n                method: 'POST',\r\n                url: '/deleteUser',\r\n                data: {\r\n                    id: id\r\n                }\r\n            }).success(function () {\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('User deleted'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            })\r\n        };\r\n\r\n        $scope.sendEmail = function (id) {\r\n\r\n        }\r\n    })\r\n    .controller('ScheduleController', function ($scope, $rootScope, $http, $location, $cookies, $mdDialog, $timeout, $mdMedia, Data) {\r\n        $rootScope.current_section = 'Schedule';\r\n        $scope.Data = Data;\r\n        $scope.user_type = $cookies.get('userType');\r\n        $scope.events = [];\r\n\r\n        $scope.loader = {\r\n            loading: false,\r\n            posting: false\r\n        };\r\n\r\n        $scope.dt = new Date();\r\n\r\n        $scope.isOpen = false;\r\n\r\n        $http.get('/getMentors').success(function (data) {\r\n            $scope.mentors = data;\r\n        });\r\n\r\n        $scope.today = function () {\r\n            $scope.dt = new Date();\r\n        };\r\n        //Watch the selected date variable and fill out the remaining 6 days' events\r\n        $scope.$watch('dt', function () {\r\n            $scope.loader.loading = true;\r\n            $http.get('/getWeekEvents/' + moment($scope.dt).format('YYYYMMDD') + '-'\r\n                + moment($scope.dt).add(6, 'd').format('YYYYMMDD')).success(function (data) {\r\n                $scope.events = [];\r\n\r\n                angular.forEach(data, function (value1, key) {\r\n                    angular.forEach(value1[0], function (value, key) {\r\n                        var temp = value;\r\n                        temp['type'] = value1['type'];\r\n                        $scope.events.push(temp);\r\n                    });\r\n                });\r\n                $scope.loader.loading = false;\r\n            });\r\n\r\n            $scope.temp1 = moment($scope.dt).add(1, 'd');\r\n            $scope.temp2 = moment($scope.dt).add(2, 'd');\r\n            $scope.temp3 = moment($scope.dt).add(3, 'd');\r\n            $scope.temp4 = moment($scope.dt).add(4, 'd');\r\n            $scope.temp5 = moment($scope.dt).add(5, 'd');\r\n            $scope.temp6 = moment($scope.dt).add(6, 'd');\r\n        });\r\n\r\n        $scope.displayDate = function (elem) {\r\n            return moment(elem).format(\"dddd, MMMM DD YYYY\");\r\n        };\r\n\r\n        $scope.displayMoment = function (elem) {\r\n            return elem.format(\"dddd, MMMM DD YYYY\");\r\n        };\r\n\r\n        $scope.parseDateFormatted = function (date, type) {\r\n            return moment(date, type).format('MM-DD-YYYY');\r\n        };\r\n\r\n        $scope.parseDate = function (date) {\r\n            return moment(date).format('MM-DD-YYYY');\r\n        };\r\n\r\n        $scope.customFullscreen = $mdMedia('xs') || $mdMedia('sm');\r\n\r\n        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\r\n\r\n        $scope.eventSelect = function (type, id) {\r\n            if (type == 'lesson')\r\n                $location.path('/lesson/' + id);\r\n            else if (type == 'reservation') {\r\n                Data.SelectedReservationId = id;\r\n\r\n                $mdDialog.show({\r\n                    controller: reservationSelectDialogController,\r\n                    templateUrl: 'dialogs/reservationSelectDialog.html',\r\n                    parent: angular.element(document.body),\r\n                    clickOutsideToClose: true,\r\n                    fullscreen: useFullScreen\r\n                });\r\n\r\n                $scope.$watch(function () {\r\n                    return $mdMedia('xs') || $mdMedia('sm');\r\n                }, function (wantsFullScreen) {\r\n                    $scope.customFullscreen = (wantsFullScreen === true);\r\n                });\r\n            }\r\n        };\r\n\r\n        $scope.eventAdd = function (type) {\r\n            if (type == 'lesson')\r\n                $location.path('/add-lesson');\r\n            else if (type == 'reservation') {\r\n                Data.SelectedMentor = [];\r\n                $mdDialog.show({\r\n                    controller: reservationAddDialogController,\r\n                    templateUrl: 'dialogs/reservationAddDialog.html',\r\n                    parent: angular.element(document.body),\r\n                    clickOutsideToClose: true,\r\n                    fullscreen: useFullScreen\r\n                });\r\n                $scope.$watch(function () {\r\n                    return $mdMedia('xs') || $mdMedia('sm');\r\n                }, function (wantsFullScreen) {\r\n                    $scope.customFullscreen = (wantsFullScreen === true);\r\n                });\r\n            }\r\n        }\r\n    })\r\n    .controller('AssignmentsController', function ($scope, $rootScope, $mdDialog, $mdMedia, Data) {\r\n        $rootScope.current_section = 'Assignment';\r\n        $scope.assignments = [];\r\n        $scope.status = false;\r\n\r\n        $scope.showDeadlineFromNow = function (date) {\r\n            return moment(date, \"MM-DD-YYYY, HH:mm\").fromNow()\r\n        };\r\n        $scope.showDeadline = function (date) {\r\n            return moment(date, \"MM-DD-YYYY, HH:mm\").format(\"dddd, MMMM Do YYYY, HH:MM\");\r\n        };\r\n        $scope.showStatus = function (bool) {\r\n            if (bool)\r\n                return \"Done\";\r\n            else\r\n                return \"Now Done\";\r\n        };\r\n\r\n        $scope.customFullscreen = $mdMedia('xs') || $mdMedia('sm');\r\n\r\n        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\r\n\r\n        $scope.addAssignment = function () {\r\n            $mdDialog.show({\r\n                controller: assignmentAddDialogController,\r\n                templateUrl: 'dialogs/assignmentAddDialog.html',\r\n                parent: angular.element(document.body),\r\n                clickOutsideToClose: true,\r\n                fullscreen: useFullScreen\r\n            });\r\n            $scope.$watch(function () {\r\n                return $mdMedia('xs') || $mdMedia('sm');\r\n            }, function (wantsFullScreen) {\r\n                $scope.customFullscreen = (wantsFullScreen === true);\r\n            });\r\n        }\r\n    })\r\n    .controller('GradingController', function ($rootScope) {\r\n        $rootScope.current_section = 'Grading';\r\n    })\r\n    .controller('ConversationController', function ($rootScope) {\r\n        $rootScope.current_section = 'Conversation';\r\n    })\r\n    .controller('NotificationController', function ($scope, $rootScope, $http, $cookies, $route, $mdDialog, $mdMedia, $mdToast, Data) {\r\n        $rootScope.current_section = 'Notification';\r\n        $scope.notifications = [[], []];\r\n\r\n        $scope.loader = {\r\n            loading: true,\r\n            posting: false\r\n        };\r\n\r\n        $scope.user_type = $cookies.get('userType');\r\n        var user_id = $cookies.get('userId');\r\n\r\n        if ($scope.user_type == 'student') {\r\n            var user_group_id = $cookies.get('userGroupId');\r\n            $http.get('/getNotifications/groups/' + user_group_id).success(function (data) {\r\n                $scope.notifications[0] = data;\r\n            });\r\n            $http.get('/getNotifications/students/' + user_id).success(function (data) {\r\n                $scope.notifications[1] = data;\r\n                $scope.loader.loading = false;\r\n            });\r\n        }\r\n        else if ($scope.user_type == 'mentor') {\r\n            $scope.notifications[0] = [];\r\n            $http.get('/getNotifications/mentors/' + user_id).success(function (data) {\r\n                $scope.notifications[1] = data;\r\n                $scope.loader.loading = false;\r\n            });\r\n        }\r\n        else {\r\n            $scope.notifications[0] = [];\r\n            $http.get('/getNotifications/teachers/' + 0).success(function (data) {\r\n                $scope.notifications[1] = data;\r\n                $scope.loader.loading = false;\r\n            });\r\n        }\r\n\r\n        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\r\n\r\n        $scope.selectNotification = function (id, index, type) {\r\n            if ($scope.notifications[type][index].status == 0)\r\n                $http({\r\n                    method: 'POST',\r\n                    url: '/changeStatusNotification',\r\n                    data: {id: id}\r\n                }).success(function () {\r\n                    $rootScope.notification_count -= 1;\r\n                    if ($rootScope < 0) {\r\n                        $rootScope = 0;\r\n                    }\r\n                    $scope.notifications[type][index].status = 1;\r\n                    showSelectNotificationDialog(id);\r\n                }).error(function (data) {\r\n                    $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                    console.log(data);\r\n                });\r\n            else\r\n                showSelectNotificationDialog(id);\r\n        };\r\n\r\n        function showSelectNotificationDialog(id) {\r\n            Data.SelectedNotificationId = id;\r\n\r\n            $mdDialog.show({\r\n                controller: notificationSelectDialogController,\r\n                templateUrl: 'dialogs/notificationSelectDialog.html',\r\n                parent: angular.element(document.body),\r\n                clickOutsideToClose: true,\r\n                fullscreen: useFullScreen\r\n            });\r\n\r\n            $scope.$watch(function () {\r\n                return $mdMedia('xs') || $mdMedia('sm');\r\n            }, function (wantsFullScreen) {\r\n                $scope.customFullscreen = (wantsFullScreen === true);\r\n            });\r\n        }\r\n\r\n        $scope.showDateFromNow = function (date) {\r\n            return moment(date, \"YYYY-MM-DD HH:mm:ss\").fromNow()\r\n        };\r\n\r\n        $scope.delete = function () {\r\n            $scope.loader.posting = true;\r\n\r\n            var list = [];\r\n\r\n            $scope.notifications.forEach(function (notification_group) {\r\n                notification_group.forEach(function (notification_elem) {\r\n                    if (notification_elem.selected == true) {\r\n                        list.push(notification_elem.id);\r\n                    }\r\n                })\r\n            });\r\n\r\n            $http({\r\n                method: 'POST',\r\n                url: '/deleteNotifications',\r\n                data: {\r\n                    list: list\r\n                }\r\n            }).success(function () {\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('Notifications are deleted'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            });\r\n        }\r\n    })\r\n    .controller('MentorScheduleController', function ($scope, $rootScope, $http, $mdDialog, $mdMedia, Data) {\r\n        $rootScope.current_section = 'Mentor Schedule';\r\n\r\n        $scope.metors = [];\r\n\r\n        $scope.loader = {\r\n            loading: true,\r\n            posting: false\r\n        };\r\n\r\n        $http.get('/getMentors').success(function (data) {\r\n            $scope.mentors = data;\r\n            $scope.loader.loading = false;\r\n        });\r\n\r\n        $scope.customFullscreen = $mdMedia('xs') || $mdMedia('sm');\r\n\r\n        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\r\n\r\n        $scope.eventAdd = function (index) {\r\n            Data.AddEventType = 'extra';\r\n            Data.SelectedMentor = $scope.mentors[index];\r\n\r\n            $mdDialog.show({\r\n                controller: reservationAddDialogController,\r\n                templateUrl: 'dialogs/reservationAddDialog.html',\r\n                parent: angular.element(document.body),\r\n                clickOutsideToClose: true,\r\n                fullscreen: useFullScreen\r\n            });\r\n            $scope.$watch(function () {\r\n                return $mdMedia('xs') || $mdMedia('sm');\r\n            }, function (wantsFullScreen) {\r\n                $scope.customFullscreen = (wantsFullScreen === true);\r\n            });\r\n        }\r\n    })\r\n    .controller('SettingsController', function ($scope, $rootScope, $http, $route, $mdToast) {\r\n        $rootScope.current_section = 'Settings';\r\n\r\n        $scope.loader = {\r\n            loading: true,\r\n            posting: false\r\n        };\r\n\r\n        $scope.groups = [];\r\n        $scope.places = [];\r\n\r\n        $scope.button_disable = {\r\n            group: false,\r\n            place: false\r\n        };\r\n\r\n        $scope.addItem = {\r\n            group: false,\r\n            place: false\r\n        };\r\n\r\n        $scope.new_group = [];\r\n        $scope.new_place = [];\r\n\r\n        $http.get('/getPlaces').success(function (data) {\r\n            $scope.places = data;\r\n\r\n            $http.get('/getGroups').success(function (data) {\r\n                $scope.groups = data;\r\n                $scope.loader = false;\r\n            });\r\n        });\r\n\r\n        $scope.toggleGroupItem = function () {\r\n            $scope.addItem.group = !$scope.addItem.group;\r\n            $scope.button_disable.group = !$scope.button_disable.group;\r\n        };\r\n\r\n        $scope.togglePlaceItem = function () {\r\n            $scope.addItem.place = !$scope.addItem.place;\r\n            $scope.button_disable.place = !$scope.button_disable.place;\r\n        };\r\n\r\n        $scope.createGroup = function () {\r\n            $http({\r\n                method: 'POST',\r\n                url: '/createGroup',\r\n                data: {\r\n                    name: $scope.new_group.name,\r\n                    email: $scope.new_group.email,\r\n                    place_id: $scope.new_group.place_id\r\n                }\r\n            }).success(function () {\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('New group created'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            })\r\n        };\r\n\r\n        $scope.createPlace = function () {\r\n            $http({\r\n                method: 'POST',\r\n                url: '/createPlace',\r\n                data: {\r\n                    name: $scope.new_place.name\r\n                }\r\n            }).success(function () {\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('New place created'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            })\r\n        };\r\n\r\n        $scope.deleteGroup = function (id) {\r\n            $http({\r\n                method: 'POST',\r\n                url: '/deleteGroup',\r\n                data: {\r\n                    id: id\r\n                }\r\n            }).success(function () {\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('Group deleted'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            })\r\n        };\r\n\r\n        $scope.deletePlace = function (id) {\r\n            $http({\r\n                method: 'POST',\r\n                url: '/deletePlace',\r\n                data: {\r\n                    id: id\r\n                }\r\n            }).success(function () {\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('Place deleted'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            })\r\n        };\r\n\r\n        $scope.editPlace = function () {\r\n            $mdToast.show($mdToast.simple().textContent('In the next update'));\r\n        };\r\n\r\n        $scope.editGroup = function () {\r\n            $mdToast.show($mdToast.simple().textContent('In the next update'));\r\n        }\r\n\r\n    })\r\n    .controller('LessonController', function ($scope, $routeParams, $http, $sce) {\r\n        var lesson_id = $routeParams.lessonId;\r\n        $scope.lesson = [];\r\n\r\n        $scope.loader = {\r\n            loading: true,\r\n            posting: false\r\n        };\r\n\r\n        $http.get('/getLesson/' + lesson_id).success(function (data) {\r\n            $scope.lesson = data;\r\n            $scope.loader.loading = false;\r\n        });\r\n\r\n        $scope.deliberatelyTrustDangerousSnippet = function () {\r\n            return $sce.trustAsHtml($scope.lesson.body);\r\n        };\r\n\r\n        $scope.parsedDate = function () {\r\n            return moment($scope.lesson.date, 'YYYYMMDD').format(\"dddd, MMMM DD YYYY\")\r\n        }\r\n    })\r\n    .controller('LessonEditorController', function ($scope, $rootScope, $cookies, $http, $location, Data, $mdDialog, $mdToast, $timeout, Upload) {\r\n        $rootScope.current_section = \"Lesson Editor\";\r\n\r\n        //progress circular initialization\r\n        $scope.loader = {\r\n            loading: false,\r\n            posting: false\r\n        };\r\n\r\n        $scope.lesson = {};\r\n        $scope.lesson.date = new Date();\r\n\r\n        $scope.minDate = new Date();\r\n        $scope.minDate.setDate((new Date()).getDate());\r\n\r\n        $scope.startHour = '';\r\n        $scope.startMinute = '';\r\n        $scope.endHour = '';\r\n        $scope.endMinute = '';\r\n\r\n        //options to selectors\r\n        $scope.hours = ('08 09 10 11 12 13 14 15 16 17 18 19 20 21 22').split(' ').map(function (hour) {\r\n            return {selectedHour: hour};\r\n        });\r\n        $scope.minutes = ('00 15 30 45').split(' ').map(function (minute) {\r\n            return {selectedMinute: minute};\r\n        });\r\n\r\n        $scope.places = [];\r\n        $http.get('/getPlaces').success(function (data) {\r\n            $scope.places = data;\r\n        });\r\n\r\n        $scope.groups = [];\r\n        $http.get('/getGroups').success(function (data) {\r\n            $scope.groups = data;\r\n        });\r\n\r\n        //get the type of user to access some actions\r\n        $scope.user_type = $cookies.get('userType');\r\n        var user_id = $cookies.get('userId');\r\n\r\n        $scope.addLesson = function () {\r\n            $scope.loader.posting = true;\r\n\r\n            var startTime = moment($scope.startHour + ':' + $scope.startMinute, 'HH:mm');\r\n            var endTime = moment($scope.endHour + ':' + $scope.endMinute, 'HH:mm');\r\n\r\n            checkTime();\r\n\r\n            function checkTime() {\r\n                if (startTime.isBefore(endTime)) {\r\n                    postData();\r\n                } else {\r\n                    $mdToast.show($mdToast.simple().textContent('Invalid time input'));\r\n                }\r\n            }\r\n\r\n            //data posting function\r\n            function postData() {\r\n                $http({\r\n                    method: 'POST',\r\n                    url: '/postLesson',\r\n                    data: {\r\n                        title: $scope.lesson.title,\r\n                        body: $scope.lesson.body,\r\n                        date: moment($scope.lesson.date).format(\"YYYYMMDD\"),\r\n                        start_time: startTime.format('HH:mm'),\r\n                        end_time: endTime.format('HH:mm'),\r\n                        group_id: $scope.lesson.group,\r\n                        place_id: $scope.lesson.place,\r\n                        status: 0,\r\n                        teacher_id: user_id\r\n                    }\r\n                }).success(function () {\r\n                    $location.path('/schedule');\r\n                    $mdToast.show($mdToast.simple().textContent('Lesson added'));\r\n                }).error(function (data) {\r\n                    $scope.loader.posting = false;\r\n                    $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                    console.log(data);\r\n                })\r\n            }\r\n        };\r\n\r\n        $scope.trixAttachmentAdd = function (e) {\r\n            var attachment;\r\n            attachment = e.attachment;\r\n            if (attachment.file) {\r\n                return upload(attachment);\r\n            }\r\n        };\r\n\r\n        function upload(attachment) {\r\n            Upload.upload({\r\n                url: '/uploadFile',\r\n                data: {\r\n                    file: attachment.file\r\n                }\r\n            }).then(function (resp) {\r\n                if (resp.status == 200) {\r\n                    attachment.setAttributes({\r\n                        url: resp.data.href,\r\n                        href: resp.data.href\r\n                    });\r\n                    $mdToast.show($mdToast.simple().textContent('File uploaded'));\r\n                }\r\n                else {\r\n                    $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                }\r\n            }, null, function (evt) {\r\n                var progress;\r\n                progress = parseInt(100.0 * evt.loaded / evt.total);\r\n                return attachment.setUploadProgress(progress);\r\n            });\r\n        }\r\n    });\r\n// Announcement edit dialog controller\r\n\r\nfunction postEditDialogController($scope, $mdDialog, $http, $mdToast, Data, $route) {\r\n    var announcement_id = Data.PostId;\r\n    $scope.loader = {\r\n        loading: true,\r\n        posting: false\r\n    };\r\n\r\n    $scope.selected = [];\r\n\r\n    $http.get('/getAnnouncement/' + announcement_id).success(function (data) {\r\n        $scope.tempAnnouncement = data;\r\n        $scope.tempAnnouncement.groups.forEach(function (group) {\r\n            $scope.selected.push(group.id);\r\n        });\r\n        $scope.edited_post = $scope.tempAnnouncement.body;\r\n        $scope.loader.loading = false;\r\n    });\r\n\r\n    $http.get('/getGroups').success(function (data) {\r\n        $scope.groups = data;\r\n    });\r\n\r\n    $scope.hide = function () {\r\n        $mdDialog.hide();\r\n    };\r\n    $scope.cancel = function () {\r\n        $mdDialog.cancel();\r\n    };\r\n    $scope.update = function () {\r\n        $scope.loader.posting = true;\r\n        $http({\r\n            method: 'POST',\r\n            url: '/updateAnnouncement',\r\n            data: {\r\n                id: announcement_id,\r\n                body: $scope.edited_post,\r\n                group_list: $scope.selected\r\n            }\r\n        }).success(function () {\r\n            $mdDialog.hide();\r\n            $route.reload();\r\n            $mdToast.show($mdToast.simple().textContent('Post edited'));\r\n        }).error(function (data) {\r\n            $scope.loader.posting = false;\r\n            $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n            console.log(data);\r\n        });\r\n    };\r\n\r\n    $scope.toggle = function (item, list) {\r\n        var idx = list.indexOf(item);\r\n        if (idx > -1) list.splice(idx, 1);\r\n        else list.push(item);\r\n    };\r\n    $scope.exists = function (item, list) {\r\n        return list.indexOf(item) > -1;\r\n    };\r\n}\r\n\r\n// Schedule dialog controllers\r\n\r\nfunction reservationSelectDialogController($scope, $http, $route, $cookies, $mdDialog, $mdMedia, $mdToast, Data) {\r\n    //initialize loading\r\n    $scope.loader = {\r\n        loading: true,\r\n        posting: false\r\n    };\r\n    var id = Data.SelectedReservationId;\r\n    $scope.user_name = $cookies.get('userName');\r\n    $scope.user_id = $cookies.get('userId');\r\n    $scope.user_type = $cookies.get('userType');\r\n\r\n    $scope.select_reservation = [];\r\n    $scope.select_reservation_status = false;\r\n\r\n    $scope.statusChangeCheck = function () {\r\n        return false\r\n    };\r\n    $scope.checkOwner = function () {\r\n        return false\r\n    };\r\n\r\n    $http.get('/getReservation/' + id).success(function (data) {\r\n        $scope.loader.loading = false;\r\n        $scope.select_reservation = data;\r\n        $scope.select_reservation_status = $scope.select_reservation.status == 1;\r\n\r\n        // to enable the switch to mark as 'done' if it's decided and user is the first responsible person\r\n        $scope.statusChangeCheck = function () {\r\n            return ($scope.select_reservation.status == 0\r\n            && $scope.user_id == $scope.select_reservation.student_id\r\n            && $scope.user_type == 'student');\r\n        };\r\n\r\n        // to display the delete and edit icon if user has an access to do actions\r\n        $scope.checkOwner = function () {\r\n            return ($scope.select_reservation.student_id == $scope.user_id && $scope.user_type == 'student') || $scope.user_type == 'teacher';\r\n        };\r\n\r\n    });\r\n\r\n    $scope.onChange = function (cbState) {\r\n        if (cbState)\r\n            $scope.select_reservation.status = 1;\r\n        else\r\n            $scope.select_reservation.status = 0;\r\n        $http({\r\n            method: 'POST',\r\n            url: '/changeStatusReservation',\r\n            data: {\r\n                id: id,\r\n                status: $scope.select_reservation_status,\r\n                from: $scope.user_type\r\n            }\r\n        }).success(function () {\r\n            $mdToast.show($mdToast.simple().textContent('Event marked as ' + $scope.showStatus($scope.select_reservation.status)));\r\n        }).error(function (data) {\r\n            $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n            console.log(data);\r\n        });\r\n    };\r\n\r\n    $scope.showStatus = function (status) {\r\n        switch (status) {\r\n            case null:\r\n                return 'Not decided';\r\n                break;\r\n            case '0':\r\n                return 'Not Done';\r\n                break;\r\n            case 0:\r\n                return 'Not Done';\r\n                break;\r\n            case '1':\r\n                return 'Done';\r\n                break;\r\n            case 1:\r\n                return 'Done';\r\n                break;\r\n            case 2:\r\n                return 'Rejected';\r\n                break;\r\n            case '2':\r\n                return 'Rejected';\r\n                break;\r\n            default:\r\n                return 'Not Done';\r\n                break;\r\n        }\r\n    };\r\n\r\n    $scope.dateExtended = function (date) {\r\n        return moment(date, 'YYYYMMDD').format(\"dddd, MMMM DD YYYY\");\r\n    };\r\n\r\n    $scope.edit = function () {\r\n        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\r\n        $mdDialog.show({\r\n            controller: reservationEditDialogController,\r\n            templateUrl: 'dialogs/reservationEditDialog.html',\r\n            parent: angular.element(document.body),\r\n            clickOutsideToClose: true,\r\n            fullscreen: useFullScreen\r\n        });\r\n        $scope.$watch(function () {\r\n            return $mdMedia('xs') || $mdMedia('sm');\r\n        }, function (wantsFullScreen) {\r\n            $scope.customFullscreen = (wantsFullScreen === true);\r\n        });\r\n    };\r\n    $scope.delete = function () {\r\n        var confirm = $mdDialog.confirm()\r\n            .title('Are you sure to delete event?')\r\n            .ok('Delete')\r\n            .cancel('Cancel');\r\n        $mdDialog.show(confirm).then(function () {\r\n            $http({\r\n                method: 'POST',\r\n                url: '/deleteReservation',\r\n                data: {\r\n                    id: id\r\n                }\r\n            }).success(function () {\r\n                $mdDialog.hide();\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('Reservation deleted'));\r\n            }).error(function (data) {\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            });\r\n        });\r\n    };\r\n    $scope.hide = function () {\r\n        $mdDialog.hide();\r\n    };\r\n    $scope.cancel = function () {\r\n        $mdDialog.cancel();\r\n    };\r\n}\r\n\r\nfunction reservationEditDialogController($scope, $http, $route, $cookies, $mdDialog, $timeout, $q, $mdToast, Data) {\r\n    //initializing progress loading\r\n    $scope.loader = {\r\n        loading: true,\r\n        posting: false\r\n    };\r\n    var id = Data.SelectedReservationId;\r\n    var user_type = $cookies.get('userType');\r\n    $scope.edit_reservation = null;\r\n\r\n    var startTime = [];\r\n    var endTime = [];\r\n\r\n    $scope.checkStudent = function () {\r\n        return user_type == 'student';\r\n    };\r\n\r\n    $http.get('/getReservation/' + id).success(function (data) {\r\n        $scope.edit_reservation = data;\r\n        $scope.edit_reservation.date = new Date(moment($scope.edit_reservation.date, 'YYYYMMDD'));\r\n\r\n        startTime = $scope.edit_reservation.start_time.split(':');\r\n        endTime = $scope.edit_reservation.end_time.split(':');\r\n\r\n        $scope.startHour = startTime[0];\r\n        $scope.startMinute = startTime[1];\r\n        $scope.endHour = endTime[0];\r\n        $scope.endMinute = endTime[1];\r\n\r\n        $scope.selectedResponsible1 = null;\r\n        $scope.selectedResponsible2 = null;\r\n\r\n        $http.get('/getMentors').success(function (data) {\r\n            $scope.searchResponsiblePeople2 = loadAll(data);\r\n            for (key in $scope.searchResponsiblePeople2) {\r\n                if ($scope.searchResponsiblePeople2[key].id == $scope.edit_reservation.mentor_id) {\r\n                    $scope.selectedResponsible2 = $scope.searchResponsiblePeople2[key];\r\n                }\r\n            }\r\n        });\r\n        $scope.loader.loading = false;\r\n    });\r\n\r\n    $scope.places = [];\r\n    $http.get('/getPlaces').success(function (data) {\r\n        $scope.places = data;\r\n    });\r\n\r\n    $scope.querySearch = querySearch;\r\n\r\n    $scope.hours = ('08 09 10 11 12 13 14 15 16 17 18 19 20 21 22').split(' ').map(function (hour) {\r\n        return {selectedHour: hour};\r\n    });\r\n    $scope.minutes = ('00 15 30 45').split(' ').map(function (minute) {\r\n        return {selectedMinute: minute};\r\n    });\r\n\r\n    function querySearch(query, people) {\r\n        var results = query ? people.filter(createFilterFor(query)) : people, deferred;\r\n        deferred = $q.defer();\r\n        $timeout(function () {\r\n            deferred.resolve(results);\r\n        }, Math.random() * 1000, false);\r\n        return deferred.promise;\r\n    }\r\n\r\n    function createFilterFor(query) {\r\n        var lowercaseQuery = angular.lowercase(query);\r\n        return function filterFn(person) {\r\n            return (person.value.indexOf(lowercaseQuery) === 0);\r\n        };\r\n    }\r\n\r\n    function loadAll(people) {\r\n        for (key in people) {\r\n            people[key].value = (people[key].name).toLowerCase();\r\n        }\r\n        return people;\r\n    }\r\n\r\n    $scope.submit = function () {\r\n        var startTime = moment($scope.startHour + ':' + $scope.startMinute, 'HH:mm');\r\n        var endTime = moment($scope.endHour + ':' + $scope.endMinute, 'HH:mm');\r\n\r\n        if (user_type == 'student') {\r\n            $scope.edit_reservation.status = null;\r\n        }\r\n\r\n        if (startTime.isBefore(endTime)) {\r\n            $scope.loader.posting = true;\r\n            $http({\r\n                method: 'POST',\r\n                url: '/updateReservation',\r\n                data: {\r\n                    id: $scope.edit_reservation.id,\r\n                    title: $scope.edit_reservation.title,\r\n                    description: $scope.edit_reservation.description,\r\n                    date: moment($scope.edit_reservation.date).format(\"YYYYMMDD\"),\r\n                    start_time: startTime.format('HH:mm'),\r\n                    end_time: endTime.format('HH:mm'),\r\n                    place_id: $scope.edit_reservation.place_id,\r\n                    status: $scope.edit_reservation.status,\r\n                    mentor_id: $scope.selectedResponsible2.id\r\n                }\r\n            }).success(function () {\r\n                $mdDialog.hide();\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('Reservation updated'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            })\r\n        } else {\r\n            $mdToast.show($mdToast.simple().textContent('Invalid time input'));\r\n        }\r\n    };\r\n    $scope.hide = function () {\r\n        $mdDialog.hide();\r\n    };\r\n    $scope.cancel = function () {\r\n        $mdDialog.cancel();\r\n    };\r\n}\r\n\r\nfunction reservationAddDialogController($scope, $http, $cookies, $route, $mdDialog, $timeout, $q, $mdToast, Data) {\r\n    $scope.loader = {\r\n        posting: false\r\n    };\r\n    var user_id = $cookies.get('userId');\r\n    $scope.user_type = $cookies.get('userType');\r\n\r\n    $scope.minDate = new Date();\r\n    $scope.minDate.setDate((new Date()).getDate());\r\n\r\n    $scope.eventDescription = '';\r\n    $scope.eventPlace = '';\r\n    $scope.eventStatus = null;\r\n    $scope.eventResponsible1 = [];\r\n    $scope.eventResponsible2 = Data.SelectedMentor;\r\n    $scope.eventDate = new Date();\r\n\r\n    $scope.startHour = '';\r\n    $scope.startMinute = '';\r\n    $scope.endHour = '';\r\n    $scope.endMinute = '';\r\n\r\n    $scope.places = [];\r\n    $http.get('/getPlaces').success(function (data) {\r\n        $scope.places = data;\r\n    });\r\n\r\n    if ($scope.user_type != 'student')\r\n        $http.get('/getStudents').success(function (data) {\r\n            $scope.searchResponsiblePeople1 = loadAll(data);\r\n        });\r\n\r\n    $http.get('/getMentors').success(function (data) {\r\n        $scope.searchResponsiblePeople2 = loadAll(data);\r\n    });\r\n\r\n    $scope.querySearch = querySearch;\r\n    $scope.selectedResponsible1 = $scope.eventResponsible1;\r\n    $scope.selectedResponsible2 = $scope.eventResponsible2;\r\n\r\n    //options to selectors\r\n    $scope.hours = ('08 09 10 11 12 13 14 15 16 17 18 19 20 21 22').split(' ').map(function (hour) {\r\n        return {selectedHour: hour};\r\n    });\r\n    $scope.minutes = ('00 15 30 45').split(' ').map(function (minute) {\r\n        return {selectedMinute: minute};\r\n    });\r\n\r\n    function querySearch(query, people) {\r\n        var results = query ? people.filter(createFilterFor(query)) : people, deferred;\r\n        deferred = $q.defer();\r\n        $timeout(function () {\r\n            deferred.resolve(results);\r\n        }, Math.random() * 1000, false);\r\n        return deferred.promise;\r\n    }\r\n\r\n    function createFilterFor(query) {\r\n        var lowercaseQuery = angular.lowercase(query);\r\n        return function filterFn(person) {\r\n            return (person.value.indexOf(lowercaseQuery) === 0);\r\n        };\r\n    }\r\n\r\n    function loadAll(people) {\r\n        for (var key in people) {\r\n            people[key].value = (people[key].name).toLowerCase();\r\n        }\r\n        return people;\r\n    }\r\n\r\n    $scope.submit = function () {\r\n        var startTime = moment($scope.startHour + ':' + $scope.startMinute, 'HH:mm');\r\n        var endTime = moment($scope.endHour + ':' + $scope.endMinute, 'HH:mm');\r\n\r\n        console.log($scope.selectedResponsible1);\r\n        if ($scope.user_type == 'teacher')\r\n            $scope.eventStatus = 0;\r\n        else if ($scope.user_type == 'student') {\r\n            $scope.selectedResponsible1.id = user_id;\r\n        }\r\n\r\n        if (startTime.isBefore(endTime)) {\r\n            $scope.loader.posting = true;\r\n            $http({\r\n                method: 'POST',\r\n                url: '/addReservation',\r\n                data: {\r\n                    description: $scope.eventDescription,\r\n                    date: moment($scope.eventDate).format(\"YYYYMMDD\"),\r\n                    start_time: startTime.format('HH:mm'),\r\n                    end_time: endTime.format('HH:mm'),\r\n                    place_id: $scope.eventPlace,\r\n                    status: $scope.eventStatus,\r\n                    student_id: $scope.selectedResponsible1.id,\r\n                    mentor_id: $scope.selectedResponsible2.id\r\n                }\r\n            }).success(function () {\r\n                $mdDialog.hide();\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('Reservation added'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            })\r\n        } else {\r\n            $mdToast.show($mdToast.simple().textContent('Invalid time input'));\r\n        }\r\n    };\r\n    $scope.hide = function () {\r\n        $mdDialog.hide();\r\n    };\r\n    $scope.cancel = function () {\r\n        $mdDialog.cancel();\r\n    };\r\n}\r\n\r\n// Notification dialog controllers\r\n\r\nfunction notificationSelectDialogController($scope, $route, $http, $cookies, $mdDialog, $mdToast, Data) {\r\n    $scope.loader = {\r\n        loading: true,\r\n        posting: false\r\n    };\r\n\r\n    $scope.user_id = $cookies.get('userId');\r\n    $scope.user_type = $cookies.get('userType');\r\n    $scope.notification_data = [];\r\n    $scope.notification_data.status = null;\r\n\r\n    $scope.editMode = false;\r\n\r\n    var notification_id = Data.SelectedNotificationId;\r\n\r\n    $http.get('/getNotification/' + notification_id).success(function (data) {\r\n        $scope.loader.loading = false;\r\n\r\n        $scope.notification_data = data;\r\n\r\n        if ($scope.notification_data.type == 'announcement') {\r\n            $scope.notificationDate = $scope.notification_data.updated_at;\r\n            $scope.notificationTitle = 'Announcement';\r\n            $scope.notificationContent = $scope.notification_data.body;\r\n            $scope.notificationOwner = $scope.notification_data.owner.name;\r\n            $scope.notificationOwnerId = $scope.notification_data.owner.id;\r\n        }\r\n        else if ($scope.notification_data.type == 'reservation') {\r\n            $scope.notificationTitle = 'Mentor reservation';\r\n\r\n            $scope.notificationDate = $scope.notification_data.date;\r\n            $scope.notificationContent = $scope.notification_data.description;\r\n            //for teacher case\r\n            if ($scope.notification_data.receiver.length == 0)\r\n                $scope.notificationReceiverId = 0;\r\n            else\r\n                $scope.notificationReceiverId = $scope.notification_data.receiver.id;\r\n            $scope.notificationReceiverType = $scope.notification_data.receiver_type;\r\n\r\n            var startTime = $scope.notification_data.start_time.split(':');\r\n            var endTime = $scope.notification_data.end_time.split(':');\r\n\r\n            $scope.startHour = startTime[0];\r\n            $scope.startMinute = startTime[1];\r\n            $scope.endHour = endTime[0];\r\n            $scope.endMinute = endTime[1];\r\n        }\r\n\r\n        //edit icon checker\r\n        $scope.edit_check = (\r\n        !$scope.editMode\r\n        && $scope.notification_data.status == null\r\n        && $scope.notificationReceiverType == $scope.user_type\r\n        && $scope.notificationReceiverId == $scope.user_id);\r\n\r\n    }).error(function (data) {\r\n        $mdToast.show($mdToast.simple().textContent('Error loading notification data'));\r\n        $mdDialog.hide();\r\n        $route.reload();\r\n        console.log(data);\r\n    });\r\n\r\n    $scope.reservationRespondCheck = function () {\r\n        return !$scope.editMode\r\n            && $scope.notification_data.status == null\r\n            && $scope.notification_data.type == 'reservation'\r\n            && $scope.user_type != 'teacher'\r\n    };\r\n\r\n    $scope.showStatus = function (check) {\r\n        if (check == null)\r\n            return 'Not decided yet';\r\n        else if (check == 0)\r\n            return 'Decided';\r\n        else if (check == 2)\r\n            return 'Rejected';\r\n        else if (check == 1)\r\n            return 'Done';\r\n    };\r\n\r\n    $scope.reservationAccept = function (bool) {\r\n        $scope.loader.posting = true;\r\n        if (bool) {\r\n            $http({\r\n                method: 'POST',\r\n                url: '/changeStatusReservation',\r\n                data: {\r\n                    id: $scope.notification_data.id,\r\n                    status: 0,\r\n                    from: $scope.user_type\r\n                }\r\n            }).success(function () {\r\n                $mdDialog.hide();\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('Extra lesson request accepted'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            });\r\n        } else {\r\n            $http({\r\n                method: 'POST',\r\n                url: '/changeStatusReservation',\r\n                data: {\r\n                    id: $scope.notification_data.id,\r\n                    status: 2,\r\n                    from: $scope.user_type\r\n                }\r\n            }).success(function () {\r\n                $mdDialog.hide();\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('Reservation rejected'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            });\r\n        }\r\n    };\r\n\r\n    $scope.edit = function () {\r\n        $scope.editMode = true;\r\n    };\r\n\r\n    $scope.hours = ('08 09 10 11 12 13 14 15 16 17 18 19 20 21 22').split(' ').map(function (hour) {\r\n        return {selectedHour: hour};\r\n    });\r\n    $scope.minutes = ('00 15 30 45').split(' ').map(function (minute) {\r\n        return {selectedMinute: minute};\r\n    });\r\n\r\n    $scope.dateExtended = function (date) {\r\n        return moment(date, 'YYYYMMDD').format(\"dddd, MMMM DD YYYY\");\r\n    };\r\n\r\n    $scope.update = function () {\r\n        var startTime = moment($scope.startHour + ':' + $scope.startMinute, 'HH:mm');\r\n        var endTime = moment($scope.endHour + ':' + $scope.endMinute, 'HH:mm');\r\n\r\n        if (startTime.isBefore(endTime)) {\r\n            $scope.loader.posting = true;\r\n            $http({\r\n                method: 'POST',\r\n                url: '/changeTimeReservation',\r\n                data: {\r\n                    id: $scope.notification_data.id,\r\n                    startTime: startTime.format('HH:mm'),\r\n                    endTime: endTime.format('HH:mm'),\r\n                    from: $scope.user_type\r\n                }\r\n            }).success(function () {\r\n                $mdDialog.hide();\r\n                $route.reload();\r\n                $mdToast.show($mdToast.simple().textContent('Reservation time changed changed'));\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            });\r\n        } else {\r\n            $mdToast.show($mdToast.simple().textContent('Invalid time input'));\r\n        }\r\n    };\r\n    $scope.hide = function () {\r\n        $mdDialog.hide();\r\n    };\r\n    $scope.cancel = function () {\r\n        $mdDialog.cancel();\r\n    };\r\n}\r\n\r\n//Person select dialog controller\r\n\r\nfunction personSelectDialogController($scope, $http, $cookies, $mdDialog, $mdMedia, Data) {\r\n    //initializing variables\r\n    $scope.person_data = [];\r\n    $scope.loader = {\r\n        loading: true\r\n    };\r\n    //get the selected person data from factory\r\n    $scope.person_table = Data.PersonTable;\r\n    $scope.person_id = Data.PersonId;\r\n    //get the user's data from cookie\r\n    var user_type = $cookies.get('userType');\r\n    var user_id = $cookies.get('userId');\r\n\r\n    //get the data of selected person from server\r\n    $http.get('/getDataUser/' + $scope.person_table + '/' + $scope.person_id).success(function (data) {\r\n        $scope.person_data = data;\r\n        $scope.loader.loading = false;\r\n    });\r\n\r\n    //check the user has access to edit personal data\r\n    $scope.checkOwner = function () {\r\n        return (user_type == 'teacher' || (user_id == $scope.person_id && (user_type + 's') == $scope.person_table)) && $scope.person_table != 'users';\r\n    };\r\n\r\n    //convert the birth date to readable format\r\n    $scope.displayBirthDate = function () {\r\n        return moment($scope.person_data.birthDate, 'MM-DD-YYYY').format('D MMMM YYYY')\r\n    };\r\n\r\n    //initializing the display to show dialog in full screnn mode\r\n    $scope.customFullscreen = $mdMedia('xs') || $mdMedia('sm');\r\n    var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\r\n\r\n    //call the edit personal data dialog\r\n    $scope.edit = function () {\r\n        $mdDialog.show({\r\n            controller: personEditDialogController,\r\n            templateUrl: 'dialogs/personEditDialog.html',\r\n            parent: angular.element(document.body),\r\n            clickOutsideToClose: true,\r\n            fullscreen: useFullScreen\r\n        });\r\n        $scope.$watch(function () {\r\n            return $mdMedia('xs') || $mdMedia('sm');\r\n        }, function (wantsFullScreen) {\r\n            $scope.customFullscreen = (wantsFullScreen === true);\r\n        });\r\n    };\r\n\r\n    //help functions\r\n    $scope.hide = function () {\r\n        $mdDialog.hide();\r\n    };\r\n    $scope.cancel = function () {\r\n        $mdDialog.cancel();\r\n    };\r\n}\r\n\r\nfunction personEditDialogController($scope, $http, $cookies, $mdMedia, $mdDialog, $mdToast, $route, Data) {\r\n    //progress circular initialization\r\n    $scope.loader = {\r\n        loading: true,\r\n        posting: false\r\n    };\r\n    //get the type of user to access some actions\r\n    $scope.user_type = $cookies.get('userType');\r\n    $scope.user_id = $cookies.get('userId');\r\n\r\n    //get the edited person data from factory\r\n    $scope.edited_person_id = Data.PersonId;\r\n    $scope.edited_person_table = Data.PersonTable;\r\n\r\n    //get the type of user to access some actions\r\n    $scope.user_type = $cookies.get('userType');\r\n\r\n    //get the work days and hours for teachers and mentors\r\n    $scope.selected_days = [];\r\n    $scope.startHour = null;\r\n    $scope.startMinute = null;\r\n    $scope.endHour = null;\r\n    $scope.endMinute = null;\r\n    $scope.old_password = '';\r\n    $scope.new_password = '';\r\n    $scope.new_password_confirm = '';\r\n\r\n    //model for week days list\r\n    $scope.week_days = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII'];\r\n\r\n    //options to selectors\r\n    $scope.hours = ('08 09 10 11 12 13 14 15 16 17 18 19 20 21 22').split(' ').map(function (hour) {\r\n        return {selectedHour: hour};\r\n    });\r\n    $scope.minutes = ('00 15 30 45').split(' ').map(function (minute) {\r\n        return {selectedMinute: minute};\r\n    });\r\n\r\n    //get the list of groups\r\n    $scope.groups = [];\r\n    $http.get('/getGroups').success(function (data) {\r\n        $scope.groups = data;\r\n    });\r\n\r\n    //get the edited person's data from server\r\n    $http.get('/getDataUser/' + $scope.edited_person_table + '/' + $scope.edited_person_id).success(function (data) {\r\n        $scope.edited_person_data = data;\r\n        if ($scope.edited_person_data.work_days) {\r\n            $scope.selected_days = $scope.edited_person_data.work_days.split(',');\r\n\r\n            var startTime = $scope.edited_person_data.work_start_time.split(':');\r\n            var endTime = $scope.edited_person_data.work_end_time.split(':');\r\n\r\n            $scope.startHour = startTime[0];\r\n            $scope.startMinute = startTime[1];\r\n            $scope.endHour = endTime[0];\r\n            $scope.endMinute = endTime[1];\r\n        }\r\n        $scope.loader.loading = false;\r\n    });\r\n\r\n    //convert the birth date to readable format\r\n    $scope.displayBirthDate = function (date) {\r\n        return moment(date, 'MM-DD-YYYY').format('D MMMM YYYY')\r\n    };\r\n\r\n    //initializing the display to show dialog in full screen mode\r\n    $scope.customFullscreen = $mdMedia('xs') || $mdMedia('sm');\r\n    var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\r\n\r\n    //change profile picture\r\n    $scope.changeProfileImage = function () {\r\n        if ($scope.checkOwner()) {\r\n            $mdDialog.show({\r\n                controller: changeProfilePictureController,\r\n                templateUrl: 'dialogs/changeProfilePictureDialog.html',\r\n                parent: angular.element(document.body),\r\n                clickOutsideToClose: true,\r\n                fullscreen: useFullScreen\r\n            });\r\n            $scope.$watch(function () {\r\n                return $mdMedia('xs') || $mdMedia('sm');\r\n            }, function (wantsFullScreen) {\r\n                $scope.customFullscreen = (wantsFullScreen === true);\r\n            });\r\n        }\r\n    };\r\n\r\n    //check the owner of data\r\n    $scope.checkOwner = function () {\r\n        return $scope.user_id == $scope.edited_person_id &&\r\n            $scope.user_type + 's' == $scope.edited_person_table;\r\n    };\r\n\r\n    //update the personal info\r\n    $scope.update = function () {\r\n        var startTime = moment($scope.startHour + ':' + $scope.startMinute, 'HH:mm');\r\n        var endTime = moment($scope.endHour + ':' + $scope.endMinute, 'HH:mm');\r\n\r\n        if ($scope.old_password.length != 0) {\r\n            if ($scope.new_password == $scope.new_password_confirm) {\r\n                if ($scope.new_password.length <= 8)\r\n                    $mdToast.show($mdToast.simple().textContent('Password should be at least 8 character!'));\r\n                else\r\n                    checkTime();\r\n            } else {\r\n                $mdToast.show($mdToast.simple().textContent('Passwords don\\'t match'));\r\n            }\r\n        } else\r\n            checkTime();\r\n\r\n        function checkTime() {\r\n            if ($scope.edited_person_table != 'students' && $scope.edited_person_table != 'users') {\r\n                if (startTime.isBefore(endTime)) {\r\n                    postData();\r\n                } else {\r\n                    $mdToast.show($mdToast.simple().textContent('Invalid time input'));\r\n                }\r\n            } else\r\n                postData();\r\n        }\r\n\r\n        //data posting function\r\n        function postData() {\r\n            $scope.loader.posting = true;\r\n            $http({\r\n                method: 'POST',\r\n                url: '/updateUser',\r\n                data: {\r\n                    table: $scope.edited_person_table,\r\n                    id: $scope.edited_person_id,\r\n                    name: $scope.edited_person_data.name,\r\n                    email: $scope.edited_person_data.email,\r\n                    old_pass: $scope.old_password,\r\n                    new_pass: $scope.new_password,\r\n                    phone: $scope.edited_person_data.phone,\r\n                    birthDate: $scope.edited_person_data.birthDate,\r\n                    group_id: $scope.edited_person_data.group_id,\r\n                    work_days: $scope.selected_days.join(','),\r\n                    work_start_time: startTime.format('HH:mm'),\r\n                    work_end_time: endTime.format('HH:mm'),\r\n                    bio: $scope.edited_person_data.bio\r\n                }\r\n            }).success(function (data) {\r\n                if (data == 2) {\r\n                    $scope.loader.posting = false;\r\n                    $mdToast.show($mdToast.simple().textContent('Old password doesn\\'t match!'));\r\n                } else {\r\n                    $mdDialog.hide();\r\n                    $route.reload();\r\n                    $mdToast.show($mdToast.simple().textContent('Personal data updated'));\r\n                }\r\n            }).error(function (data) {\r\n                $scope.loader.posting = false;\r\n                $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                console.log(data);\r\n            })\r\n        }\r\n    };\r\n\r\n    //help functions\r\n    $scope.hide = function () {\r\n        $mdDialog.hide();\r\n    };\r\n    $scope.cancel = function () {\r\n        $mdDialog.cancel();\r\n    };\r\n\r\n}\r\n\r\n//Profile picture edit controller\r\n\r\nfunction changeProfilePictureController($scope, $cookies, $mdDialog, $mdToast, $timeout, Upload) {\r\n    //progress circular initialization\r\n    $scope.loader = {\r\n        loading: false,\r\n        posting: false\r\n    };\r\n\r\n    //get the type of user to access some actions\r\n    var user_type = $cookies.get('userType');\r\n    var user_id = $cookies.get('userId');\r\n\r\n    //upload the cropped image to server\r\n    $scope.upload = function (dataUrl, name) {\r\n        $scope.loader.posting = true;\r\n        Upload.upload({\r\n            url: '/uploadImage',\r\n            data: {\r\n                user_type: user_type,\r\n                user_id: user_id,\r\n                file: Upload.dataUrltoBlob(dataUrl, name)\r\n            }\r\n        }).then(function (resp) {\r\n            $timeout(function () {\r\n                $scope.loader.posting = false;\r\n                if (resp.status == 200) {\r\n                    $mdDialog.hide();\r\n                    location.reload();\r\n                    $mdToast.show($mdToast.simple().textContent('Picture uploaded'));\r\n                }\r\n                else {\r\n                    $mdToast.show($mdToast.simple().textContent('Error occurred'));\r\n                }\r\n            });\r\n        }, null, null);\r\n    };\r\n\r\n    //help functions\r\n    $scope.hide = function () {\r\n        $mdDialog.hide();\r\n    };\r\n    $scope.cancel = function () {\r\n        $mdDialog.cancel();\r\n    };\r\n}\r\n\r\n// Assignment add dialog controller\r\n\r\nfunction assignmentAddDialogController($scope, $mdDialog, $mdToast) {\r\n    /*\r\n     $scope.minDate = new Date();\r\n     $scope.minDate.setDate((new Date()).getDate());\r\n\r\n     $scope.assignmentTitle = '';\r\n     $scope.assignmentRule = '';\r\n     $scope.assignmentGroup = '';\r\n\r\n\r\n     $scope.assignmentStartDate = '';\r\n     $scope.assignmentEndDate = '';\r\n\r\n     $scope.startHour = '';\r\n     $scope.startMinute = '';\r\n     $scope.endHour = '';\r\n     $scope.endMinute = '';\r\n\r\n     //options to selectors\r\n     $scope.hours = ('08 09 10 11 12 13 14 15 16 17 18 19 20 21 22').split(' ').map(function (hour) {\r\n     return {selectedHour: hour};\r\n     });\r\n     $scope.minutes = ('00 15 30 45').split(' ').map(function (minute) {\r\n     return {selectedMinute: minute};\r\n     });\r\n\r\n\r\n     $scope.submit = function () {\r\n     $scope.addedAssignment = {};\r\n\r\n     var startDate = moment(moment($scope.assignmentStartDate).format('MM-DD-YYYY') + ',' + $scope.startHour + ':' + $scope.startMinute, 'MM-DD-YYYY,HH:mm');\r\n     var endDate = moment(moment($scope.assignmentEndDate).format('MM-DD-YYYY') + ',' + $scope.endHour + ':' + $scope.endMinute, 'MM-DD-YYYY,HH:mm');\r\n\r\n     if (startDate.isBefore(endDate)) {\r\n     $scope.addedAssignment.title = $scope.assignmentTitle;\r\n     $scope.addedAssignment.rule = $scope.assignmentRule;\r\n     $scope.addedAssignment.date = moment(new Date).format(\"MM-DD-YYYY, HH:mm\");\r\n     $scope.addedAssignment.startDate = startDate.format('MM-DD-YYYY, HH:mm');\r\n     $scope.addedAssignment.endDate = endDate.format('MM-DD-YYYY, HH:mm');\r\n     $scope.addedAssignment.owner = ProfileService.user_name;\r\n     $scope.addedAssignment.doneCount = 0;\r\n\r\n     $mdDialog.hide();\r\n     $mdToast.show($mdToast.simple().textContent('Assignment Added'));\r\n     } else {\r\n     $mdToast.show($mdToast.simple().textContent('Invalid time input'));\r\n     }\r\n\r\n     };\r\n     $scope.hide = function () {\r\n     $mdDialog.hide();\r\n     };\r\n     $scope.cancel = function () {\r\n     $mdDialog.cancel();\r\n     };\r\n     */\r\n}\r\n\r\n//useful functions\r\nfunction clone(obj) {\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n    var copy = obj.constructor();\r\n    for (var attr in obj) {\r\n        if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\r\n    }\r\n    return copy;\r\n}","portalApp.config(['$routeProvider', function ($routeProvider) {\r\n    $routeProvider\r\n        .when('/', {\r\n            templateUrl: \"sections/Schedule.html\",\r\n            controller: 'ScheduleController'\r\n        })\r\n        .when('/announcement', {\r\n            templateUrl: \"sections/Announcement.html\",\r\n            controller: 'AnnouncementController'\r\n        })\r\n        .when('/conversation', {\r\n            templateUrl: \"sections/Conversation.html\",\r\n            controller: 'ConversationController'\r\n        })\r\n        .when('/notification', {\r\n            templateUrl: \"sections/Notification.html\",\r\n            controller: 'NotificationController'\r\n        })\r\n        .when('/people', {\r\n            templateUrl: \"sections/People.html\",\r\n            controller: 'PeopleController'\r\n        })\r\n        .when('/schedule', {\r\n            templateUrl: \"sections/Schedule.html\",\r\n            controller: 'ScheduleController'\r\n        })\r\n        .when('/mentor-schedule', {\r\n            templateUrl: \"sections/MentorSchedule.html\",\r\n            controller: 'MentorScheduleController'\r\n        })\r\n        .when('/assignment', {\r\n            templateUrl: \"sections/Assignments.html\",\r\n            controller: 'AssignmentsController'\r\n        })\r\n        .when('/grading', {\r\n            templateUrl: \"sections/Grading.html\",\r\n            controller: 'GradingController'\r\n        })\r\n        .when('/add-lesson', {\r\n            templateUrl: \"sections/Lesson-Editor.html\",\r\n            controller: 'LessonEditorController'\r\n        })\r\n        .when('/lesson-editor/:lessonId', {\r\n            templateUrl: \"sections/Lesson-Editor.html\",\r\n            controller: 'LessonEditorController'\r\n        })\r\n        .when('/lesson/:lessonId', {\r\n            templateUrl: \"sections/Lesson.html\",\r\n            controller: 'LessonController'\r\n        })\r\n        .when('/attendance',{\r\n            templateUrl: \"sections/Attendance.html\",\r\n            controller: 'AttendanceController'\r\n        })\r\n        .when('/settings', {\r\n            templateUrl: \"sections/Settings.html\",\r\n            controller: 'SettingsController'\r\n        })\r\n        .when('/grading', {\r\n            templateUrl: \"sections/Grading.html\",\r\n            controller: 'GradingController'\r\n        })\r\n        .otherwise({\r\n            redirectTo: '/'\r\n        });\r\n}]);\r\n"],"sourceRoot":"/source/"}